#!/bin/bash
set -e

# This is a base test script for conflating datasets where one dataset comes from an osm api database and the other from 
# a hoot api database.  It simulates at the command line level what one possible conflation workflow with MapEdit data 
# looks like.  See ServiceOsmApiDbAllDataTypesConflateTest.sh for an example of how to call this script.
# 
# This script:
#   - writes two datasets, one to an OSM API database and one to a Hoot API database; assumes the two have overlapping aoi's 
#   - conflates the data together and writes the result to a Hoot API database
#   - writes out a sql changeset file that is the difference between the original OSM API database reference dataset and the conflated output in the Hoot API database
#   - executes the changeset file SQL against the OSM API database
#   - reads out the entire contents of the OSM API database and verifies it

REF_DATASET=$1
SEC_DATASET=$2
AOI=-180,-90,180,90 # We're conflating all of each dataset together.  In a real world situation, we'd just grab the AOI 
                    # of the secondary dataset instead.
TEST_NAME=$3

echo "reference dataset: " $REF_DATASET
echo "secondary dataset: " $SEC_DATASET
echo "AOI: " $AOI
echo "TEST_NAME: " $TEST_NAME

RUN_DEBUG_STEPS=false

source conf/DatabaseConfig.sh
export OSM_API_DB_URL="osmapidb://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME_OSMAPI"
export OSM_API_DB_AUTH="-h $DB_HOST -p $DB_PORT -U $DB_USER"
export PGPASSWORD=$DB_PASSWORD_OSMAPI
export HOOT_DB_URL="hootapidb://$DB_USER:$DB_PASSWORD@$DB_HOST:$DB_PORT/$DB_NAME"
# Will probably eventually remove postgresql.dumpfile.writer.add.circular.error.tag, but its needed for the time being for tests
# using this script only.
export HOOT_OPTS="--error -D hootapi.db.writer.create.user=true -D hootapi.db.writer.email=OsmApiDbConflate@hoottestcpp.org -D hootapi.db.writer.overwrite.map=true -D hootapi.db.reader.email=OsmApiDbConflate@hoottestcpp.org -D reader.add.source.datetime=false -D postgresql.dumpfile.writer.add.circular.error.tag=true"

rm -rf test-output/cmd/glacial/$TEST_NAME
mkdir -p test-output/cmd/glacial/$TEST_NAME

echo ""
echo "STEP 1: Cleaning out the osm api db and initializing it for use..."
source scripts/SetupOsmApiDB.sh force
psql --quiet $OSM_API_DB_AUTH -d $DB_NAME_OSMAPI -f test-files/servicesdb/users.sql

echo ""
echo "STEP 2: Writing the reference dataset to the osm api db..."
cp $REF_DATASET test-output/cmd/glacial/$TEST_NAME/2-ref-raw.osm
# By default, all of these element ID's will be written starting at 1 by the postgres dump file writer.
hoot convert $HOOT_OPTS test-output/cmd/glacial/$TEST_NAME/2-ref-raw.osm test-output/cmd/glacial/$TEST_NAME/2-ref-ToBeAppliedToOsmApiDb.sql
psql --quiet $OSM_API_DB_AUTH -d $DB_NAME_OSMAPI -f test-output/cmd/glacial/$TEST_NAME/2-ref-ToBeAppliedToOsmApiDb.sql

if [ "$RUN_DEBUG_STEPS" == "true" ]; then
  echo ""
  echo "STEP 3: Reading the reference dataset out of the osm api db and writing it into a file (debugging purposes only)..."
  hoot convert $HOOT_OPTS $OSM_API_DB_URL test-output/cmd/glacial/$TEST_NAME/3-ref-PulledFromOsmApiDb.osm
fi

echo ""
echo "STEP 4: Writing the secondary dataset to the hoot api db..."
cp $SEC_DATASET test-output/cmd/glacial/$TEST_NAME/4-secondary-raw.osm
hoot convert $HOOT_OPTS test-output/cmd/glacial/$TEST_NAME/4-secondary-raw.osm "$HOOT_DB_URL/4-secondary-$TEST_NAME"

if [ "$RUN_DEBUG_STEPS" == "true" ]; then
  echo ""
  echo "STEP 5: Reading the secondary dataset out of the hoot api db and writing it into a file (debugging purposes only)..."
  hoot convert $HOOT_OPTS "$HOOT_DB_URL/4-secondary-$TEST_NAME" test-output/cmd/glacial/$TEST_NAME/5-secondary-cropped-PulledFromHootApiDb.osm
fi

echo ""
echo "STEP 6: Conflating the two datasets..."
# We're writing the output to the hoot api db first here, rather than directly to the osm api db, b/c if there are reviews 
# we want to give the user a chance to review them.  That can only happen when the output is stored in a hoot api db.
hoot conflate $HOOT_OPTS -D "match.creators=hoot::HighwayMatchCreator;hoot::BuildingMatchCreator;hoot::ScriptMatchCreator,PoiGeneric.js" -D "merger.creators=hoot::BuildingMergerCreator;hoot::ScriptMergerCreator;hoot::HighwaySnapMergerCreator" -D convert.bounding.box=$AOI -D conflate.use.data.source.ids=true -D osm.map.reader.factory.reader=hoot::OsmApiDbAwareHootApiDbReader -D osm.map.writer.factory.writer=hoot::OsmApiDbAwareHootApiDbWriter -D osmapidb.id.aware.url=$OSM_API_DB_URL $OSM_API_DB_URL "$HOOT_DB_URL/4-secondary-$TEST_NAME" "$HOOT_DB_URL/6-conflated-$TEST_NAME"

if [ "$RUN_DEBUG_STEPS" == "true" ]; then
  echo ""
  echo "STEP 7: Reading the conflated dataset out of the hoot api db and writing it into a file (debugging purposes only)..."
  hoot convert $HOOT_OPTS "$HOOT_DB_URL/6-conflated-$TEST_NAME" test-output/cmd/glacial/$TEST_NAME/7-conflated-PulledFromHootApiDb.osm
fi

echo ""
echo "STEP 8: Writing a SQL changeset file that is the difference between the cropped reference input dataset and the conflated output..."
hoot derive-changeset $HOOT_OPTS -D osm.changeset.sql.file.writer.generate.new.ids=false -D convert.bounding.box=$AOI $OSM_API_DB_URL "$HOOT_DB_URL/6-conflated-$TEST_NAME" test-output/cmd/glacial/$TEST_NAME/8-changeset-ToBeAppliedToOsmApiDb.osc.sql $OSM_API_DB_URL

echo ""
echo "STEP 9: Executing the changeset SQL on the osm api db..."
hoot apply-changeset $HOOT_OPTS test-output/cmd/glacial/$TEST_NAME/8-changeset-ToBeAppliedToOsmApiDb.osc.sql $OSM_API_DB_URL

if [ "$RUN_DEBUG_STEPS" == "true" ]; then
  echo ""
  echo "STEP 10: Reading the contents of the osm api db for the specified aoi, writing it into a file, and verifying it (debugging purposes only)..."
  hoot convert $HOOT_OPTS -D convert.bounding.box=$AOI $OSM_API_DB_URL test-output/cmd/glacial/$TEST_NAME/10-cropped-output-PulledFromOsmApiDb.osm
fi

echo ""
echo "STEP 11: Reading the entire contents of the osm api db, writing it into a file, and verifying it..."
hoot convert $HOOT_OPTS $OSM_API_DB_URL test-output/cmd/glacial/$TEST_NAME/11-output-PulledFromOsmApiDb.osm
hoot is-match test-files/cmd/glacial/$TEST_NAME/output.osm test-output/cmd/glacial/$TEST_NAME/11-output-PulledFromOsmApiDb.osm


