
[[Building-to-POI-Conflation]]
== Building to POI Conflation

[[Matching]]
=== Matching
  
Building to POI conflation in Hootenanny is a rule based conflation based on the following rules:

* Find all candidate POI / building pairs. A candidate is any POI that is within the combined circular error of a building plus the user definable +poi.polygon.match.review.distance+ config option. (see below for the combined circular error calculation)
* Assign Match: If the POI is within the user definable +poi.polygon.match.distance+ config option and either: 
the name is a close match or the tags have a similarity score as defined in the +poi.polygon.match.type.threshold+ config option when compared
to the polygon.
* Assign Review: If the POI is within the user definable distance config option and either the name is not a close match or the tags are too dissimilar
* Assign Miss: Everything else - If the POI is not within the distance specified by the +poi.polygon.match.review.distance+ config option, a
miss will occur.

Unlike many of the matching routines intra-data set matches are allowed. This resolves issues that commonly occur in data sets where buildings are duplicated in a POI layer.

The circular error (CE) of the two input elements is assumed to be that we are 95% CE for each feature. To combine the two values together into a single value that represents the 95% confidence that they're within that distance is:

------
sigma1 = CE1 / 2
sigma2 = CE2 / 2
combined CE = sqrt(sigma1 * sigma1 + sigma2 * sigma2) * 2
------

[[Merging]]
=== Merging
  
Once a relationship has been established between elements a graph is created to determine any interdependencies. If a single element is involved in multiple matches then all the elements involved in that set of matches are marked as needing review. This avoids complex situations where there are multiple conflicting POI attributes.

However, if a review relationship is found and a match relationship is found, the review relationship is not included in the interdependence calculation. So, you may have a POI merged with one building, but marked as needing review with another building. Modifying this business logic will require some user input on the desired functionality as well as some not so insignificant internal changes.

If a merge is warranted, the geometry of the building is used and the tags are merged using the default tag merging mechanism ( +tag.merger.default+ configuration key).

[[Configurable-Options]]
=== Configurable Options
  
See the User Guide Command Line Documentation section for all configuration options beginning with the text "poi.polygon".

