[[validate]]
== validate

=== Description

The `validate` command uses https://josm.openstreetmap.de/[JOSM] to identify map data with erroneous 
aspects.

To list information about the available validators use the following options:

* `--validators` - Displays available JOSM validators for use in validation.
                        
To generate validation reports and/or mark data with validation errors use the following options:

* `input(s)`          - Input(s); may be any supported input format (e.g. .osm file) or a directory 
                        if `--recursive` is specified. Files with "-validated" in the name will be 
                        ignored, as these are considered to be output of a previous validation.
* `--report-output`   - Writes combined report output to a file instead of writing it to the 
                        display.
* `--output`          - Optional single validated file output; may be any supported output format 
                        (e.g. .osm file). If specified, all inputs will be combined and elements 
                        with validation errors will be marked with tags in the output file. Required 
                        if `--recursive` is specified. Not compatible with `--separate-output`.
* `--separate-output` - Optional multiple validated file outputs. Each input is processed and 
                        written to a separate output location with the same base name as each input 
                        with the text "-validated" appended to it. Not compatible with `--output`, 
                        OSM API database (osmapidb://) or OSM API (http://) formats, or the OGR 
                        layer input syntax.
 * `--recursive`      - Allows for processing the files contained in any directories specified in 
                        `input(s)` recursively. This parameter must be followed by either "*" to 
                        denote no filtering or one or more wildcard name filters. e.g. 
                        "*.osm;*.json" or "*myFile*". This parameter is not compatible with the OGR 
                        layer input syntax.   
                        
To recursively clean validated output, specify one or more directory inputs along with use of this 
single option:

* `--cleanValidatedOutput`

Using this option cleans all validated output files and directories recursively beginning from the 
specified input directories. This is a very simple routine that will delete any file or directory 
that has the text "-validated" in its name. Use with caution.
                             
To run validation on case test output use the single option:

* `--test`

Using this option validates all test output files found under the `test-files/cases` directory 
(`Output.osm`). It assumes you have previously run `HootTest --case-only` or any other test suite 
that also runs the case tests). Use of this option automatically forces use of the option 
`--separate-output`. A separate validated file named `validated-output.osm` and a separate 
validation report named `validated-output-report` will be generated for each test output. The 
generated report is compared to a "gold" report file in the same directory named 
`validation-report`, and if a difference is found, the validation test is considered as failing.

=== Usage

--------------------------------------
# list the available validators
hoot validate [--validators]

# perform validation
hoot validate (input1) [input2...] [--report-output path] [--output path] [--recursive "*"|"filter1;filter2..."]

# perform validation and write to separate outputs
hoot validate (input1) [input2...] [--recursive "*"|"filter1;filter2..."] [--separate-output]

# recursively clean validated output
hoot validate (inputDir) --cleanValidatedOutput

# run validation tests; HootTest --glacial must be run beforehand when using the default configuration.
hoot validate --test
--------------------------------------

https://github.com/ngageoint/hootenanny/blob/master/docs/user/CommandLineExamples.asciidoc#validation[Examples]

==== See Also

* https://github.com/ngageoint/hootenanny/blob/master/docs/user/FeatureValidationAndCleaning.asciidoc[JOSM configuration details]
* josm.* and jni.* configuration options
* https://github.com/ngageoint/hootenanny/blob/master/docs/user/SupportedDataFormats.asciidoc#applying-changes-1[Supported Input Formats]
