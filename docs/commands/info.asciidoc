[[info]]
== info

The `info` command displays information about command capabilities.

=== Option Overview

Only one of the following options can be passed to the command per invocation:

* `--cleaning-operations`      - Displays the default configured options for cleaning map data
* `--config-options`           - Displays available configuration options
* `--conflatable-criteria`     - Displays criteria that identify conflatable elements
* `--conflate-post-operations` - Displays operations configured by default to run after a conflation 
                                 job (can be customized via the `conflate.post.ops` configuration 
                                 option)
* `--conflate-pre-operations`  - Displays operations configured by default to run before a 
                                 conflation job (can be customized via the `conflate.pre.ops` 
                                 configuration option)
* `--criterion-consumers`      - Displays operations capable of taking in an ElementCriterion as 
                                 input
* `--feature-extractors`       - Displays available feature extractors used in conflation model 
                                 building
* `--filters`                  - Displays a list of all criteria that can be used for element 
                                 filtering
* `--formats`                  - Displays supported data input/output formats
* `--geometry-type-criteria`   - Displays criteria that identify a feature geometry type
* `--languages`                - Displays information about translatable/detectable spoken languages
* `--matchers`                 - Displays available feature matchers used during conflation
* `--match-creators`           - Displays available feature match creators used during conflation
* `--mergers`                  - Displays available feature mergers used during conflation
* `--merger-creators`          - Displays available feature merger creators used during conflation
* `--operators`                - Displays available inline operators that can be applied to map 
                                 datasets
* `--string-comparators`       - Displays available string comparators
* `--subline-matchers`         - Displays available subline matchers
* `--subline-string-matchers`  - Displays available subline string matchers
* `--tag-mergers`              - Displays available feature tag mergers used during conflation
* `--validators`               - Displays available non-JOSM validators.
* `--value-aggregators`        - Displays available feature tag value aggregators used in conflation 
                                 model building
* `--way-joiners`              - Displays available way joiners
* `--way-snap-criteria`        - Displays available way criteria for snapping ways to each other

All configuration options (-D <option>) added to this command must be added to before the specified 
option. Example:

--------
hoot info -D match.creators="HighwayMatchCreator;ScriptMatchCreator,River.js" --way-snap-criteria
--------

Note how "--way-snap-criteria" is specified after the single configuration option.

https://github.com/ngageoint/hootenanny/blob/master/docs/user/CommandLineExamples.asciidoc#metainfo[Examples]

Each of the following sections describes an option that may be used with this command and its input 
parameters.

=== Cleaning Operations

The `--cleaning-operations` option prints out the currently configured map cleaning operators that 
are applied during conflation or with the 'clean' command.  The configuration option 
'map.cleaner.transforms' controls which operators are applied. Note that the operators are 
purposefully shown in the order they are applied and not in alphabetical order.

==== Usage

--------------------------------------
hoot info --cleaning-operations
--------------------------------------

=== Configuration Options

The `--config-options` option prints out available Hootenanny configuration options.

==== Input Parameters

One of the following input parameters must be specified:

* `name`             - name or partial name of a configuration option to list and/or print a 
                       description for
* `--option-names`   - if no name is specified, lists all configuration option names; if a name is 
                       specified, lists only configuration option names that have a full or partial 
                       match with the input name
* `--option-details` - if no name is specified, lists all configuration option names and 
                       descriptions; if a name is specified, lists only configuration option names 
                       and descriptions that have a full or partial match with the input name

==== Usage

--------------------------------------
hoot info --config-options [--option-names]
hoot info --config-options [--option-details]
hoot info --config-options (name) [--option-names]
hoot info --config-options (name) [--option-details]
--------------------------------------

=== Conflatable Criteria

The `--conflatable-crieria`` option prints out all element criteria classes that can be used to
 identify conflatable elements.

==== Usage

--------------------------------------
hoot info --conflatable-criteria
--------------------------------------

=== Conflate Post Operations

The `--conflate-post-operations` option prints out the currently configured operations to run 
immediately after a conflation job with the 'conflate' command.  The configuration option 
'conflate.post.ops' controls which operators are applied.

==== Usage

--------------------------------------
hoot info --conflate-post-operations
--------------------------------------

=== Conflate Pre Operations

The `--conflate-pre-operations` option prints out the currently configured operations to run 
immediately after a conflation job with the 'conflate' command.  The configuration option 
'conflate.pre.ops' controls which operators are applied.

==== Usage

--------------------------------------
hoot info --conflate-pre-operations
--------------------------------------

=== Element Criterion Consumers

The `--criterion-consumers`` option prints out all operations that are capable of taking an 
`ElementCriterion` as input. Passing in an `ElementCriterion` to an operation can be useful when 
filtering elements before performing data transformations on them.

==== Usage

--------------------------------------
hoot info --criterion-consumers
--------------------------------------

=== Feature Extractors

The `--feature-extractors` option prints out available feature extractors that can be used when 
building a conflation model with manually matched map training data.

==== Usage

--------------------------------------
hoot info --feature-extractors
--------------------------------------

=== Filters

The `--filters`` option prints out all the element criteria classes, which are a subset of what is 
displayed with the `--operators` option. Element criteria can be used to filter elements during a 
conversion or conflation job.

==== Usage

--------------------------------------
hoot info --filters
--------------------------------------

=== Formats

The `--formats` option prints out supported data formats. 

The --input-bounded sub-option prints out input formats that support bounded reads with the `bounds`
configuration option.

==== Usage

--------------------------------------
hoot info --formats [--input] [--input-bounded] [--input-streamable] [--ogr] [--output] [--output-streamable]
--------------------------------------

=== Geometry Type Criteria

The `--geometry-type-crieria`` option prints out all element criteria classes that can be used to 
identify an element's geometry.

==== Usage

--------------------------------------
hoot info --geometry-type-crieria
--------------------------------------

=== Languages

The `languages` option displays information about Hootenanny language translation/detection capabilities.

All uses of the `languages` command require the following configuration options to be populated:
* hoot.services.auth.user.name
* hoot.services.auth.access.token
* hoot.services.auth.access.token.secret

For more information on logging into the web services, see the 'login' command documentation.  Those options are omitted 
from the following command examples.

Only one of the following options can be passed to the command:

* `--detectable`    - Prints all spoken languages that Hootenanny can detect and the detectors that can detect them
* `--detectors`     - Prints all available language detector implementations for the translation service
* `--translatable`  - Prints all spoken languages that Hootenanny translate from to English and the translators that 
                      can translate them
* `--translators`   - Prints all available language translator implementations for the translation service

The `--detectors` option prints out all available language detectors that can be used with the Hootenanny web services.

https://github.com/ngageoint/hootenanny/blob/master/docs/user/CommandLineExamples.asciidoc#metainfo[Examples]

Each of the following sections describes an option that may be used with this command and its input parameters.

==== Usage

--------------------------------------
hoot info-rnd --languages --detectors
--------------------------------------

The `--translators` option prints out all available language translators that can be used with the Hootenanny web services.

==== Usage

--------------------------------------
hoot info-rnd --languages --translators
--------------------------------------

The `--detectable` option prints out spoken languages which Hootenanny can detect when using the Hootenanny web services.

==== Usage

--------------------------------------
hoot info-rnd --languages --detectable
--------------------------------------

The `--translatable` option prints out spoken languages which Hootenanny can translate from to English when using 
the Hootenanny web services.

==== Usage

--------------------------------------
hoot info-rnd --languages --translatable
--------------------------------------

=== Matchers

The `--matchers` option prints out available conflate matchers that may be applied when conflating 
data. Matchers contain the criteria to match a specific pair of features

==== Usage

--------------------------------------
hoot info --matchers
--------------------------------------

=== Match Creators

The `--match-creators` option prints out available conflate match creators that may be applied when 
conflating data. Match Creators are responsible for spawning matchers.

==== Usage

--------------------------------------
hoot info --match-creators
--------------------------------------

=== Mergers

The `--mergers` option prints out available conflate mergers that may be applied when conflating 
data. Mergers are created to merge a feature pair supported by a corresponding matcher.

==== Usage

--------------------------------------
hoot info --mergers
--------------------------------------

=== Merger Creators

The `--merger-creators` option prints out available conflate merger creators that may be applied 
when conflating data. Merger Creators are responsible for spawning mergers.

==== Usage

--------------------------------------
hoot info --merger-creators
--------------------------------------

=== Operators

The `--operators` option prints out available inline operators that can be applied to map data in a 
Hootenanny command. Map operators can be criterion, operations, or visitors.

* An example of an operation is DuplicateWayRemover, which removes all duplicate ways from a map.
* An example of a criterion is NodeCriterion, which acts as a filter to return all nodes in a map.
* An example of a visitor is RemoveTagsVisitor, which removes selected tags from features in a map.

==== Usage

--------------------------------------
hoot info --operators
--------------------------------------

=== Subline Matchers

The `--subline-matchers` option prints out available subline matchers that determine which method of 
line matching is used during conflation.

==== Usage

--------------------------------------
hoot info --subline-matchers
--------------------------------------

=== Subline String Matchers

The `--subline-string-matchers` option prints out available subline string matchers that determine 
which method of multilinestring matching is used during conflation.

==== Usage

--------------------------------------
hoot info --subline-string-matchers
--------------------------------------

=== String Comparators

The `--string-comparators` option prints out available string comparators that can be used during 
conflation when comparing tag string values.

==== Usage

--------------------------------------
hoot info --string-comparators
--------------------------------------

=== Tag Mergers

The `--tag-mergers` option prints out available tag mergers that may be applied when conflating
 data.

==== Usage

--------------------------------------
hoot info --tag-mergers
--------------------------------------

=== Validators

The `--validators` option prints out available Hootenanny validators that can be used to validate 
data. To see Hootenanny and JOSM validators together, run `validate --validators` instead (must be 
configured `--with-josm`).

==== Usage

--------------------------------------
hoot info --validators
--------------------------------------

=== Value Aggregators

The `--value-aggregators` option prints out available tag value aggregation methods that can be used 
when building a conflation model with manually matched map training data.

==== Usage

--------------------------------------
hoot info --value-aggregators
--------------------------------------

=== Way Joiners

The `--way-joiners` option prints out all way joiner class implementations that may either be used 
independently or in conjunction with the OsmMapOperation, `WayJoinerOp`.

==== Usage

--------------------------------------
hoot info --way-joiners
--------------------------------------

=== Way Snap Criteria

The `--way-snap-criteria` option prints out all criterion class implementations that may used with 
`UnconnectedWaySnapper` to filter the types of ways that are snapped to each other. The list is 
restricted to a criterion that will snap all feature types (LinearCriterion) or criteria that are 
both conflatable and represent linear geometry types (e.g. HighwayCriterion). Unlike most other 
`info` options this prints out a delimited list of class names only with no descriptions. 
Optionally, this command call takes in the `match.creators` configuration option to determine the 
appropriate list of criterion that goes with a specific set of matchers. If `match.creators` is not 
passed in, then a list with all available snapping criteria are returned. The list of available
 matchers can be obtained with `hoot info --match-creators`.

==== Usage

--------------------------------------
hoot info --way-snap-criteria
--------------------------------------

