[[perty]]
== perty

=== Description

The +perty+ command perturbs map data.  It reads from input, permutes the data, and writes to output files. The +perty+ command is 
based on the paper, "Evaluating conflation methods using uncertainty modeling," P. Doucette, et. al, 2012. 

* +input+   - Input (e.g. .osm file).
* +output+  - Output (e.g. .osm file).  If specifying --score or --test this should be a directory.
* +--score+ - (optional) Generates a PERTY score for a conflation operation.  Must be specified after configuration options.  Not 
              valid in combination with the --test option.  This option causes the command to read from reference input, create 
              a permuted copy of the reference data, conflate the referenced data with the permuted data, and then write the reference 
              data, permuted data, and conflated data to output files.
* +--test+  - (optional) This option causes the command to generate a series of PERTY scores for the same set of conflation inputs 
              and averagesthem together (to account for randomness), which yields a single PERTY score.  Must be specified after 
              configuration options.  Not valid in combination with the --score option.  Any number of conflation jobs may be run per test.  

=== Optional Defines

perty.* configuration options can be used with this command.  See the Configuration Options section for details.

=== Usage

--------------------------------------
perty (input) (output) [--score] [--test]
--------------------------------------

=== Examples

The following example perturbs the file "reference-in.osm", given the specified PERTY options (overrides default settings for 
those options), and writes the perturbed data to a file "perturbed-out.osm":

--------------------------------------
hoot perty -D perty.search.distance=20 -D perty.way.generalize.probability=0.7
  reference-in.osm perturbed-out.osm
--------------------------------------

The following example perturbs a copy of the input file "reference-in.osm", conflates "reference-in.osm" with the copy, and  displays a 
PERTY score to define how accurately the data was conflated.  The conflated data, along with the perturbed and reference data are written 
to the "outdir" directory:

--------------------------------------
hoot perty -D perty.systematic.error.x=1 -D perty.systematic.error.y=1 \
 reference-in.osm outdir --score
--------------------------------------

The following example will run 10 separate tests with five simulations per test (a total of 50 generated PERTY scores, five per test).  
It assigns a value of 1.0 to two PERTY related input variables and increments them by 5.0 for each successive simulation run inside 
of each test run (test run 1/simulation 1 has value 1.0; test run 1/simulation 2 has value 6.0, etc.).  It compares the averaged 
score for each test run to the specified list of scores passed to the command as input.  If the average of the generated scores 
for each simulation within a test run is greater than or equal to the corresponding score from the list, +/- the allowable specified 
score variance of .05, the test is described as passing in the command's output.  Otherwise, it is described as failing.  A
summarized list of scores for each test run is displayed upon completion of all of the test runs.

--------------------------------------
hoot perty -D perty.test.num.runs=10 -D perty.test.num.simulations=5 \
  -D perty.test.dynamic.variables=perty.systematic.error.x;perty.systematic.error.y \
  -D perty.test.dynamic.variable.start.value=1.0 \
  -D perty.test.dynamic.variable.increment=5.0 \
  -D perty.test.expected.scores=0.9;0.95;0.93;0.952;0.91;0.95;0.9;0.95;0.95;0.95 \
  -D perty.test.allowed.score.variance=0.05 reference-in.osm output-dir --test
--------------------------------------

=== Perty Tests

The --test option optionally allows for altering a single, user selected PERTY input variable value across each test run (multiple 
input variables can be altered per test run but each must receive the same value).

The averaged PERTY score generated by the test run across all simulations is compared to a user input set of expected scores for 
each test run (the number of expected scores must match the number of test runs specified). If the actual averaged PERTY score for a 
test run falls within an allowed user specified score variance threshold when compared to the expected score, the test is classified
as passing.  Otherwise the test is classified as having failed.  Note: If you want to bypass the "pass/fail" determination of the 
command, you can set the +perty.test.allowed.score.variance+ equal to 1.0 and set +perty.test.expected.scores+ to a list the same 
size as the number of of test runs.  This effectively disables the score validation.

=== See Also

* `perty.*` configuration options

