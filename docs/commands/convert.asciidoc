[[convert]]
== convert

=== Description

The +convert+ command converts map data from one input format to another.  Optionally, a schema translation may be 
performed during the conversion.  The process may be memory bound depending upon the input or output formats selected.  
See the Hootenanny User Guide Supported Data Formats section for more information.

* +input(s)+       - Input path(s) to convert from; may be any supported input format; Multiple inputs are supported 
                     unless converting to an OGR format, and path wildcards may be used for inputs within the same 
                     directory. For OGR inputs, layer names may also optionally be specified.  Use a single space to 
                     separate each input and a ';' between inputs and layer (<filename>;<layer name>).
* +output+         - Output path to convert to; may be any supported output format (e.g. .osm file, etc.).
* +--write-bounds+ - If the `bounds` configuration option is specified, optionally outputs a file containing the input bounds.
                     The location of the file is controlled via the `bounds.output.file` configuration option.

=== Usage

--------------------------------------
convert (input) (output)

# This syntax is upported for OGR inputs only.
convert "(input1[;layer]) [input2[;layer]]" (output) [--write-bounds]
--------------------------------------

https://github.com/ngageoint/hootenanny/blob/master/docs/user/CommandLineExamples.asciidoc#conversion[Examples]

=== Conversion Operations

If the `convert.ops` configuration option is included, then all the specified operations are applied
to the map, in order, before writing the result to the output. If a schema translation script is
specified in schema.translation.script a SchemaTranslationVisitor is automatically added to the
convert operations, so explicitly specifying it is unnecessary but will not cause problems.

=== Filtering Features Geographically

If the configuration option, `bounds`, is set to a valid geographic bounds (see the configuration 
option documentation for formats), supporting readers will read data only from within the specified 
bounds. The `bounds.*` configuration options allow for further customization of the bounds 
requirement.

=== Notes

* The format for OSM database URLs is: protocol://<user name>:<password>@<host name>:<port>/<database name>
* The format for OGR database URLs is: PG:"dbname='databasename' host='addr' port='5432' user='x' password='y'"
* Writing to OSM API databases (osmapidb://) is intended to be a bulk operation for new data only (no updates on existing data).
* When converting from OSM to an OGR format, the +convert+ command provides conversion from .osm files or POSTGIS osm 
databases to Shapefile, FileGDB, etc. The OGR libraries are used on the back end so other formats such as PostGIS and 
SQLite will likely work, but are not tested.
* The conversion from OSM file to shape file is a lossy process that generates a point, line and polygon shapefile. The OSM 
XML format is a richer format than Shapefile and supports such things as multiple geometry types within one file, 
inherit topology and arbitrary tagging. For these reasons the conversion to Shapefile is a lossy conversion.
* To use file geodatabases, the File Geodatabase module must be compiled into your version of GDAL to work. See
http://trac.osgeo.org/gdal/wiki/FileGDB for details.
* The format for specifying zip file data is: "/vsizip/<path to Zip file>/<path to the shape file INSIDE the Zip file>. 
The "/" are field separators. If you get errors using absolute paths, check that you have the right number of "/".
** a Zip file located at /gis-data/test_data.zip
*** The path to the shapefile inside the Zip file: "dir/LAP010.shp
*** The input is: "/vsizip//gis-data/test_data.zip/dir/LAP010.shp"
*** If the Zip file is in the current directory, the input will be: /vsizip/./test_data.zip/dir/LAP010.shp
*** If you do not specify a specific shapefile then it will read in all shapefiles in the given directory
* To prevent memory bound conversion when converting to OSM XML, you must set the writer.xml.sort.by.id configuration option to false.

=== See Also

* https://github.com/ngageoint/hootenanny/blob/master/docs/user/SupportedDataFormats.asciidoc#applying-changes-1[Supported Input Formats]
* `bounds.*` configuration options
