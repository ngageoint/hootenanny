[[convert]]
== convert

=== Description

The +convert+ command converts map data from one input format to another.  Optionally, a schema translation may be 
performed during the conversion.  The process may be memory bound depending upon the input or output formats selected.  
See the Hootenanny User Guide Supported Data Formats section for more information.

* +input(s)+       - Input path(s) to convert from; may be any supported input format (e.g. .osm file). Multiple inputs 
                     are supported unless converting to an OGR format. Path wildcards may be used for inputs within the 
                     same directory. For OGR inputs, layer names may also optionally be specified.
* +output+         - Output path to convert to; may be any supported output format (e.g. .osm file, etc.).
* +--write-bounds+ - If the `bounds` configuration option is specified, optionally outputs a file containing the input bounds.
                     The location of the file is controlled via the `bounds.output.file` configuration option.

=== Usage

--------------------------------------
convert (input) [input2...] (output)

# This syntax is supported for OGR inputs only.
convert (input1[;layer]) [input2[;layer]] (output) [--write-bounds]
--------------------------------------

https://github.com/ngageoint/hootenanny/blob/master/docs/user/CommandLineExamples.asciidoc#conversion[Examples]

=== Conversion Operations

If the `convert.ops` configuration option is included, then all the specified operations are applied
to the map, in order, before writing the result to the output. If a schema translation script is
specified in schema.translation.script a SchemaTranslationVisitor is automatically added to the
convert operations, so explicitly specifying it is unnecessary but will not cause problems.

=== Filtering Features Geographically

If the configuration option, `bounds`, is set to a valid geographic bounds (see the configuration 
option documentation for formats), supporting readers will read data only from within the specified 
bounds. The `bounds.*` configuration options allow for further customization of the bounds 
requirement.

=== Notes

* The conversion from OSM file to shape file is a lossy process that generates a point, line and polygon shapefile. The OSM 
XML format is a richer format than Shapefile and supports such things as multiple geometry types within one file, 
inherit topology and arbitrary tagging. For these reasons the conversion to Shapefile is a lossy conversion.

=== See Also

* https://github.com/ngageoint/hootenanny/blob/master/docs/user/SupportedDataFormats.asciidoc[Supported Input Formats]
* `bounds.*` configuration options
