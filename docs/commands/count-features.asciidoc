== count-features 

=== Description

The +count-features+ command displays a count of the number of features in a map or calculates a statistic on them, allowing for 
optional filtering with a criterion.  Features are defined as elements with at least one information tag, whereas elements have no 
tag requirements.

* +inputs+         - One or more OSM data inputs; specify multiple inputs by separating them with a semicolon and surrounding them with quotes
* +criterion+      - (optional) The criterion may be either the single class name of a Hootenanny criterion or a visitor that supports the
                     SingleStatistic interface.  Use the +operators+ command to obtain a list of available Hootenanny visitors and criterion.
* +--all-elements+ - The default behavior when no criterion is specified or when a criterion is specified is to only consider features.
                     Activating this option causes the command to consider all elements.  This setting has no affect when passing a
                     visitor as a criterion.

=== Usage

--------------------------------------
hoot count-features (input(s)) [criterion] [--all-elements]
--------------------------------------

=== Examples

--------------------------------------
# count all features
hoot count-features input1.osm

# count all elements
hoot count-features input1.osm --all-elements

# count all POIs
hoot count-features "input1.osm;input2.osm" hoot::PoiCriterion

# count all elements that are not POIs
hoot count-features -D element.criterion.negate=true "input1.osm;input2.osm" hoot::PoiCriterion --all-elements

# calculate the numericical average of all values for a custom tag
hoot count-features -D average.numeric.tags.visitor.keys=tagKey1 input1.osm hoot::AverageNumericTagsVisitor

# count all manual matches made on features
hoot count-features input1.osm hoot::CountManualMatchesVisitor
--------------------------------------

=== Notes

* All visitors must inherit from ConstElementVisitor.
* All criterions must inherit from ElementCriterion.
* All visitors and criterion must be classes that have an empty constructor or a constructor with a simple OsmMap parameter as input.


