[[generate-alpha-shape]]
== generate-alpha-shape

=== Description

The +generate-alpha-shape+ command provides a way to generate a "concave hull" for a set of points.  Specifically, it reads data from
one input, calculates the alpha shape and writes the resulting multipolygon to output. This is most useful when seeding the
+cookie-cut+ command. The degree of the concaveness is determined by the alpha parameters. A small alpha parameter creates a
shape with a large number of holes and concave sections. A large alpha value creates a shape closer to a convex hull. An alpha
value equal to the maximum distance between any two points in the data or larger will create a convex hull. Additional details
can be found in the _Cookie Cutter_ section of <<hootalgo, Hootenanny - Algorithms>> and in the following documents:
https://github.com/ngageoint/hootenanny/files/595246/Hootenanny.-.Alpha.Shape.2013-03-07.pptx[here].

* +--alpha value+   - The size in meters used for alpha. A larger value makes a smoother shape and a smaller value will create a rough shape with more
                      holes. Value in meters.
* +--buffer value+  - The buffer to add to the alpha shape before cutting. A negative value will make the shape smaller. Value in meters. Generally a
                      buffer of zero will be used. If using the alpha shape command with cookie cutter it is a good idea to use a larger negative value
                      on complex data shapes. This will limit the number of holes in the data. A negative value equal to the alpha value is a good rule
                      of thumb. Default value of the buffer is 0 meters.
* +points+          - The input data to use for deriving the alpha shape; may be any supported input format (e.g. OSM file). The alpha shape algorithm
                      is used to derive a polygon representing the bounds.
* +output+          - The output; may be any supported output format (e.g. OSM file).

When output to a +.osm+ file the alpha shape will always be a multi-polygon with one attribute +area=yes+. When output as a Shapefile it will 
be a multipolygon shapefile with a single record. Hootenanny doesn't support relations in +.osm.pbf+ files.

=== Usage

--------------------------------------
generate-alpha-shape (--alpha value) [--buffer value] (points) (alpha)
--------------------------------------

==== Example

Calculate an alpha shape using the points in CapitalHeightsBuildings.shp with an alpha value of 200 m:
(Both commands are functionally equivalent.)

--------------------------------------
hoot generate-alpha-shape --alpha 200 CapitalHeightsBuildings.shp CapitalHeightsShape.shp
hoot generate-alpha-shape --alpha 200 --buffer 0 CapitalHeightsBuildings.shp CapitalHeightsShape.shp
--------------------------------------

Calculate an alpha shape using the same input with an alpha value of 200 m and a buffer of -10 m:

--------------------------------------
hoot generate-alpha-shape --alpha 200 --buffer -10 CapitalHeightsBuildings.shp 200 0 CapitalHeightsShape.shp
--------------------------------------

Calculate an alpha shape without an alpha value that is automatically generated based on the input data, and a buffer of 10 m:

--------------------------------------
hoot generate-alpha-shape --buffer 10 CapitalHeightsBuildings.shp 200 0 CapitalHeightsShape.shp
--------------------------------------


=== See Also

* https://github.com/ngageoint/hootenanny/files/595246/Hootenanny.-.Alpha.Shape.2013-03-07.pptx[Alpha Shape Presentation]
* https://github.com/ngageoint/hootenanny/blob/master/docs/algorithms/AlphaShape.asciidoc[Alpha Shape Documentation]
* https://github.com/ngageoint/hootenanny/wiki/files/2010-B-01-AlphaShapes.pdf[Alpha Shape Research Paper]
* _Horizontal Conflation_, <<hootalgo,Hootenanny - Algorithms>>
* _Cookie Cutter_ section of <<hootalgo, Hootenanny - Algorithms>>
* `cookie.cutter.*` configuration options
* https://github.com/ngageoint/hootenanny/blob/master/docs/user/SupportedDataFormats.asciidoc#applying-changes-1[Supported Input Formats]

