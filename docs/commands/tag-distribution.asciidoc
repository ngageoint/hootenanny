[[tag-distribution]]
== tag-distribution

=== Description

The +tag-distribution+ command displays a distribution for all values of a specified tag key and a 
percentage of each value's frequency compared to all other tag values.

* +input(s)+                 - One or more inputs; may be any supported input format (e.g. .osm file).
* +tagKeys+                  - The tag keys to gather statistics for. To process all tags, leave this empty by specifying 
                               a pair of quotes with nothing between them. This parameter is ignored if `--names` or `--types` 
                               is used.
* +criteria+                 - (optional) Filtering criteria for the inputs; May be one or more class names inheriting from 
                               `ElementCriterion`. By default, multiple criteria are logically OR'd together. Set the 
                               `tag.distribution.chain.element.criteria` option to true to have the criteria logically 
                               AND'd together. The criteria can be negated with the option `element.criteria.negate`.
                               Use the +info --operators+ command to obtain a list of available criteria.
* +--names+                  - If specified, `tagKeys` is ignored and only name tags, as defined by Hootenanny's schema, 
                               are processed. This is incompatible with the `--types` option.
* +--types+                  - If specified, `tagKeys` is ignored and only type tags, as defined by Hootenanny's schema, 
                               are processed. This is incompatible with the `--names` option.
* +--percentage-of-matching+ - By default with this option omitted, tag distribution percentages are based on all elements
                               parsed. Elements not possessing the tags specified in `tagKeys`, `--names`, or `--types` are
                               counted in the element total. With this option enabled, only elements which have one of the
                               specified tags are counted in the element total. Enabling this option has no effect if
                               all tag keys are parsed (empty `tagKeys`).
* +--sort-by-value +         - Sorts results alphabetically by tag value. If not specified, results are sorted by decreasing 
                               tag value occurrence frequency.
* +--limit+                  - Limits the number of results returned.
* +--tokenize+               - Breaks tag values up into individual tokens before counting them.
* +--recursive+              - Allows for displaying tag information against elements recursively in a directory structure. 
                               This must be followed by either "*" to denote no filtering or one or more wildcard 
                               name filters. e.g. "*.osm;*.json" or "*myFile*". The recursion is only performed on 
                               file directories and this parameter is ignored for other input types.

=== Usage

--------------------------------------
tag-distribution ("input1;input2...") ("tagKey1;tagKey2...") ["criterion1;criterion2..."] [--names] [--types] \
  [--percentage-of-matching] [--sort-by-value] [--limit]  [--tokenize] [--recursive]
--------------------------------------

https://github.com/ngageoint/hootenanny/blob/master/docs/user/CommandLineExamples.asciidoc#display-the-distribution-of-highway-tags-for-roads-in-a-map[Examples]

=== Percentage Calculation Methods

Usage of options can change the way the tag percentages are calculated. 

As an example, here we calculate the distribution of "highway" tags for all elements in a map:

-----
hoot tag-distribution input.osm highway --limit 3

Total elements processed: 8,707. Total tags processed: 6,529.
401	(4.61%)	highway=residential
97	(1.11%)	highway=service
56	(<1%)	highway=secondary
-----

The above results reflect the percentage of "highway" tags found among all feature in the map, which include road ways, 
road nodes, etc.

Now, we run the same calculation, but restrict the elements parsed to only those that Hootenanny classifies as roads
(`HighwayCriterion`). Hootenanny classifies roads as way elements possessing a "highway" tag.

-----
hoot tag-distribution input.osm highway HighwayCriterion --limit 3

Total elements processed: 673. Total tags processed: 5,565. Filtered by: hoot::HighwayCriterion.
401	(59.6%)	highway=residential
97	(14.4%)	highway=service
56	(8.32%)	highway=secondary
-----

In the above results, the lower total number of elements and changed percentage values are a result of restricting the 
counting to only road features. 

Finally, we have a third option for counting "highway" tags where we only count elements that have the tag but without
without restricting the elements parsed to those that Hootenanny deems to be roads (`HighwayCriterion`).

-----
hoot tag-distribution input.osm highway --percentage-of-matching --limit 3

Total elements processed: 721. Total tags processed: 6,529.
401	(55.6%)	highway=residential
97	(13.5%)	highway=service
56	(7.77%)	highway=secondary
-----

The increased total element count includes non-way elements with a "highway" tag, e.g. `highway=traffic_signals` and
`highway=turning_circle` nodes.

=== See Also

* https://github.com/ngageoint/hootenanny/blob/master/docs/user/SupportedDataFormats.asciidoc#applying-changes-1[Supported Input Formats]
