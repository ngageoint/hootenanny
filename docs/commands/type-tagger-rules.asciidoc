[[type-tagger-rules]]
== type-tagger-rules

=== Description

The +type-tagger-rules+ command allows for creating an implicit tag rules database that can be used to implicitly add type tags to features 
based on their names.  See the "Implicit Element Type Tagging Based On Name" section in the Hootenanny User Guide for more information.

=== Creating the Raw Implicit Type Tagging Rules File

A raw rules file must be created before generating a rules database.  Use the --create-raw option to generate it:

* +inputs+       - Semicolon delimited list of input paths; may be any supported input format (e.g. OSM file).
* +translations+ - Semicolon delimited list of translation scripts used to translate each input dataset; must be *.js or *.py files. Specify 
                   'none' as an individual entry to skip translation for an input.
* +output+       - An *.implicitTagRules tab delimited implicit tag rules file.

Relevant configuration options are those beginning with implicit.tagging.raw.rules.deriver.*, and in some cases those beginning with implicit.tagging.*, in conf/core/ConfigOptions.asciidoc.

==== Usage

--------------------------------------
type-tagger-rules --create-raw (inputs) (translations) (output)
--------------------------------------

==== Examples

--------------------------------------
hoot type-tagger-rules --create-raw "myInput.osm.pbf;myInput.geonames" "translations/OSM_Ingest.js;translations/GeoNames.js" \
myRules.implicitTagRules
--------------------------------------

=== Creating the Implicit Type Tagging Rules Database

Once a raw rules file has been generated, an implicit type tag rules database may be generated with the --create-db option:

* +input+       - an .implicitTagRules tab delimited rules for input
* +output+      - a .sqlite database file for output

Relevant configuration options are those beginning with implicit.tagging.database.deriver.* and in some cases those beginning with
implicit.tagging.*, in conf/core/ConfigOptions.asciidoc.

==== Usage

--------------------------------------
type-tagger-rules --create-db (input) (output)
--------------------------------------

==== Examples

--------------------------------------
hoot type-tagger-rules --create-db myInput.implicitTagRules implicitTagRules.sqlite
--------------------------------------

=== Showing Rules Database Statistics

Statistics for a rules database can be displayed with the --db-stats option:

* +input+       - an .implicitTagRules tab delimited rules for input

==== Usage

--------------------------------------
type-tagger-rules --db-stats (input)
--------------------------------------

==== Examples

--------------------------------------
hoot type-tagger-rules --db-stats implicitTagRules.sqlite
--------------------------------------

=== See Also

* <<hootuser, ImplicitTypeTaggingUser>>
* <<hootalgo, ImplicitTypeTaggingAlg>>
* <<hootDevGuide, ImplicitTagRulesDatabaseGeneration>>
* "Supported Input Formats":https://github.com/ngageoint/hootenanny/blob/master/docs/user/SupportedDataFormats.asciidoc
