
== Hootenanny User Interface

=== Background

Hootenanny deploys with an interactive web-based user interface adapted from the MapBox iD Editor. This offers several benefits including its open license that allows users to customize and add functionality, along with an in-depth editing capability that was originally designed for interactive editing of OSM features. Hootenanny is designed to facilitate automated and semi-automated conflation of critical Foundation GEOINT features in the topographic domain, namely roads (polylines), buildings (polygons), and points-of-interest (POIs) (points). Conflation happens at the dataset level, where the user’s workflow determines the best reference dataset and source content, geometry and attributes, to transfer to the output map. The input data must be normalized to allow processing and matching of features and attributes from different schemas. Hootenanny internal processing leverages the key value pair structure of OpenStreetMap (OSM) for improved utility and applicability to broader user groups, e.g. normalized attributes can be used to aid in feature matching and OSM’s free tagging system allows the map to include an unlimited number of attributes describing each feature. Depending on the data and selected conflation options, the process of resolving ambiguous features is handled by an interactive conflict resolution workflow. Hootenanny cues up conflicts and drives the user to each conflict to make the appropriate geometry or attribute fix. Additionally, the user has the option to edit other features they may come across that need correcting while working through the conflict cue. For users that do not want to perform this manual editing or want to accept the automated solution in full, there is the option to accept all or discard all conflicts. This becomes a user choice and ultimately a risk assessment between accepting geometry and attribute errors resulting from automated algorithms versus the use purpose of the end product.

The general case of the Hootenanny conflation workflow is shown in <<HootConflationWorkflow>> and depicts the high-level steps necessary to conflate data and generate an output map in Hootenanny. It is important for the user to understand these functions as each have implications on the conflated results. The squares represent a specific conflation task, while the oval canisters represent a database function. The workflow is described as follows:

[[HootConflationWorkflow]]
.Hootenanny Conflation Workflow.
image::user/images/id/hoot_general_workflow.png[]

Hootenanny currently supports the conflation of POIs, Building polygons, Transportation polylines (highways, cart tracks, trails, bridges, and tunnels), and experimentally, Waterway polylines (hydrologic features such as rivers, streams, drainage, and ditches).   When conflating these features, it is important to note that conflation occurs between similar feature types (e.g. POI to POI, Building to Building, Transportation polyline to Transportation polyline, etc.) but not across feature domains (POI to Polygon, POI to Polyline, etc.).

This guide is intended as a general purpose reference to understand various components of the software functionality and provide simple use cases that demonstrate how to leverage these capabilities using publicly available datasets. The document is broken down into sections by application functionality such as adding new layers, editing map data, translation between different application schemas and performing conflation using reference and non-reference datasets. For background on the project history, command line interface, javascript api, and other technical details please refer to the Hootenanny User Guide.

=== Accessing Hootenanny

Hootenanny can be accessed from a web browser using the standard URL http://(your_servername):port/hootenanny-id/. The current version of Hootenanny iD is only supported in Chrome (recommended) and/or Chromium.

[[HootiD-UILayout]]
.Hootenanny User Interface Layout. *A*: Hootenanny version info (click on Hootenanny). *B*: Manage/Return to Map toggle. *C*: Map tools for measuring, cropping, and editing features. *D*: Overview map available using `/`. *E*: Map navigation and background layer configuration tool bar (DigitalGlobe Global Basemap selected as background layer). *F*: Add Reference Dataset button. *G*: Layer directory structure with scrolling and resize options. *H*: Recently Used Layers dropdown lists most recent layers accessed. *I*: Layer color picker. *J* Add layer button (layer must be selected i.e. highlighted in yellow to add to map). *K*: Add Secondary Dataset button.  *L*: Sidebar resizing. *M*: Hoot scale bar (meters or imperial). *N*: WGS84 degrees, minutes, seconds. *O*: Map View. Basemap Imagery is DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_UI_layout.png[]

=== Adding Layers to the Map

During conflation, source datasets are merged based on user-specified conflation parameters to create an output layer that is ultimately superior in terms of complete geometry and attribution. Two datasets are required to perform a conflation; _Reference_ and _Secondary_ Data. To add a new Reference Dataset to the map, click on the _Add Reference Dataset_ button on the left side. A list of available layers will appear in the drop down menu as shown in <<hoot_add_datasets>>. Note that in order to add a layer it must be <<Hoot-iD_Datasets,imported>> into Hootenanny using the workflow described in <<Hoot-iD_Datasets>>.

[[hoot_add_datasets]]
.Adding Datasets.  Click on Add Reference/Secondary Dataset button to display a list of available layers and folders.  Clicking on the folder icon e.g. dc, expands the contents showing all layers and subfolders.  In order to add a layer to the map it must be selected (highlighted in yellow).  To modify the layer color click on the palette or select OSM symbology then add to map. Recently used layers can be added using the dropdown menu shown. The size of the panel can be expanded to increase/decrease the width of the panel by dragging the sidebar (L in <<HootiD-UILayout>>) to the desired size. 
image::user/images/id/hoot_addlayer_folder.png[scaledwidth="25%"]

[[HootiD-Addinglayers]]
.Displaying Haiti roads layers in Hootenanny. The datasets shown are extracted OSM highway data (pink) and MGCP data (yellow); DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_Haiti_roads.png[]

To zoom to the layer extent simply right-click on the layer and click on the Zoom to Layer button that appears on the layer name.  This is useful when panning or zooming outside of the viewable extent or scale of the data.

[Hoot_zoomtolayer]]
.Zooming to Layer extent. Right click on the layer name and select zoom to layer.
image::user/images/id/hoot_zoom-to-layer.png[scaledwidth="25%"]

=== Data display in Hootenanny using Mapnik

Displaying a layer that has a dense feature count or large extent can be a challenge within Hootenanny due to the resources required to render the features on the map.  To better support this constraint, we have integrated link:$$mapnik.org$$[Mapnik], an open source toolkit for rendering map data.  Mapnik is preconfigured during install and will run as a parallel node-mapnik server rendering data dynamically based on the user's layer color selection.  Note that although data may be rendered on the map, it does not become selectable i.e. to edit or display tags, until the user zooms to an appropriate zoom level (data dependent).  

.Mapnik rendering with warning message indicating features not editable at current zoom level.  Washington, D.C. Street Centerline data downloaded from DCGIS Open Data's data catalog. DigitalGlobe GBM basemap.
image::user/images/id/hoot_mapnik_rendering.png[scaledwidth="75%"]

[[HootiD-EditingLayers]]
=== Editing Features in Hootenanny

Similar to editing data in link:$$http://wiki.openstreetmap.org/wiki/Editing$$[OpenStreetMap.org], users can select any point, line or polygon feature and modify both the geometry and attribution displayed. To aid the user during the editing process, Hootenanny provides the additional functionality of allowing users to toggle between different display tag schemas (OSM, TDS 6.1, and TDS 4.0) by changing the Filter By Type drop down to the desired tag format.  This does _not_ modify the underlying data but merely changes the displayed tag schema in the left panel.

[[Filter-by-Type]]
.Changing the displayed tag schema in Hootenanny using the Filter By Type dropdown. The left image shows the selected feature displayed in OSM while right side shows the identical feature in TDSv61. DigitalGlobe GBM basemap.
image::user/images/id/hoot_OSMvTDS.png[scaledwidth="75%"]

==== Modifying Layer Attributes

When a feature has been selected (or a new one has been added), it is possible to modify both its <<ModifyLayerGeometry,geometry>> (e.g. moving a point, adding vertices, modifying the shape of a polygon, etc..) and the associated attribute values. First it's important to note that each tag schema maintains it's own set of default presets. For example, clicking on the Secondary Road icon using the OSM schema displays a list of suggested presets based on the schema and element type (poi, line, area). If a type does not appear listed, type the name (e.g. Culvert) in the Search window that appears when you click on the icon. To learn more about a tag such as Secondary Road, click on the 'i' button next to the preset and an image will pop-up as shown below with a link to the OpenStreetMap Wiki page for that feature. Values for each field can be edited by clicking in each attribute and either typing or selecting from a set of pre-populated values. Note that both OSM and TDS schemas will only support a set of limited values for certain fields so it's best to consult domain subject matter experts when modifying.

[[ViewingPresets]]
.Click on the info 'i' to bring up more information about a preset.
image::user/images/id/hoot_preset_info.png[scaledwidth="25%"]

The _All Tags_ section shown below contains all of the feature tags for a layer that have been translated from their native data structure to Hootenanny during <<Hoot-iD_Datasets,import>>. If an expected tag does not appear, it might be a good time to revisit the translation steps described in <<TranslationAssistant>>, <<HootiD-Translation>> or review the original source data. New fields can be added by clicking on the Add Field drop down menu and selecting an appropriate value. Additional tags can be added by clicking on the '+' button at the bottom of the All tags shown below. To delete or display additional info about a tag, click on either the trash can or info icons that appear next to each tag. Note that any changes will not be final to a layer until the user clicks on Save to commit the edits to the Hootenanny database. For OSM tags, users can check the 'Sort A-Z' box to sort tags in alphabetical order.

.Displaying all OSM feature tags in Hootenanny. Note check boxes are shown for tags that a user might copy/paste into a matching feature.
image::user/images/id/hoot_alltags_OSM.png[scaledwidth="25%"]

[[ModifyLayerGeometry]]
==== Modifying Layer Geometry

To modify the feature geometry, click on the feature to expose the editing palette that pertains to the particular selected feature. Note that each unique geometry type and shape present their own options that may not display for other features. For instance, selecting a linear feature exposes editing options to straighten or change the directionality whereas clicking on a feature that traces a square, rectangle or circular path exposes options to make the feature a square or circle. Editing options include adding additional nodes by double clicking on a line segment, moving a node to manually modify the shape or path of a line or polygon, moving a point, and deleting features. For a list of shortcut keys to each operation, see <<Hoot-iD_Shortcuts, short-cuts>>.

.Editing layer geometry in Hootenanny. Port Au Prince, Haiti; OSM Highway data (pink) selected and geometry editing palette options display; DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_edit_geom.png[scaledwidth="50%"]

In order to save any edits applied to a layer click on the _Save_ button displayed on top in the map view or to revert to a previous edit. Save will commit any edits on a particular layer to the hoot database where as the Undo/Redo buttons will step back/forward through any modifications applied to either that layer’s geometry or attribution. The number displayed next to the Save button indicates the number of edits that will be committed to the database for a given session.

.Saving edits in Hootenanny. The user applied the editing option to square the corners of line feature to expose the Save button above. The number of edits made before committing (2 in this example) is displayed in addition to options for undo/redo changes. Port Au Prince, Haiti; OSM Highway data (pink); DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_edit_save.png[scaledwidth="75%"]

=== Adding New Features

It is also possible to create new features for a given layer in Hootenanny iD but any new feature added must be done with at least one layer present. Note that any new features added without an associated layer cannot be saved. The ability to create new features within the GUI is a key component of the OpenStreetMap version of iD Editor and additional background and editing workflows can be found online via link:$$https://www.openstreetmap.org/edit?editor=id$$[OpenStreetMap-iD's] help menu. A brief background is provided here for general user orientation.

To add a new point, click on the Point button appearing in the Map Viewer or use the 1 shortcut key. Points can be used to represent features such as shops, restaurants, parks and monuments, etc. They mark a specific location and describe the feature based on the OSM/TDS tag relationship. Once a new point is added to the map, a panel will appear on the map prompting you to select an appropriate feature type (park, cafe, etc) and any associated tags. Note that even though OSM values are presented, the data is stored on the database using the TDS tag equivalent. The next time it is edited within Hootenanny it will display the values using the english translated LTDS schema.

.Adding a new point in Hootenanny. In this example a new Point is added to the Haiti OSM roads data indicating that the feature represents a Hospital Grounds `amenity=hospital`. DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_adddata.png[scaledwidth="75%"]

To add a new linear feature, click on the Line button or use the 2 shortcut key and begin digitizing on the map. A pop-up message will appear if you would like to snap to an existing linear feature. Click on a single location to begin the linear feature and then continue clicking until feature has been completed. Double-click to complete the process and edit any attribution as needed. Repeat process for a new Area feature (shortcut = 3). Click Save to save all edits or step back/forward using the undo/redo buttons as needed.

NOTE: clicking the i key will display the length or area of a selected feature but note that the recommended tool for measuring is discussed <<Hoot_measure,here>>.

==== Copying Features/Tags in Hootenanny

In certain circumstances it may be useful to utilize copy/paste functionality when editing layers and addressing conflict reviews within Hootenanny.  For example, if users need to create multiple copies of a selected feature (or set of features) within the same map layer (e.g. foot path, bridge, secondary road, POI, etc...) or they would like to copy tags from one feature to another similar feature, the following workflows can be used. 

NOTE: Currently users can only copy/paste geometry and tags of any feature(s) within a single "active" layer or copy selected tags from a feature(s) and either overwrite or merge them with the tags from selected feature(s) in either layer.  It is currently _not_ possible to copy/paste a feature from the Reference Dataset to the Secondary Dataset (or vice-versa) manually and if attempted the application will enter a idle state requiring refresh.

===== Copying Features/Tags Within a Single Layer

To copy a feature(s) within a single layer, select the feature or set of features that you wish to copy using the left-mouse button (for multiple features press the _shift_ key during selection).  Use the `Ctrl + c` to copy the selected feature(s) and then `Ctrl + v` to display a duplicate feature(s) that can be placed anywhere on the map.   

.Copying Feature Geometry/Tags within a Layer.  The selected item, a Monument named Major General Rochambeau is copied and pasted.  Note that the `name` tag is not copied to the newly created feature since it is assumed to be unique.
image::user/images/id/hoot_copy_feature.png[scaledwidth="75%"]

NOTE: If only specific tags are needed to manually copy from one feature to another within a single layer do not use Ctrl + c but instead check the box next to each tag in the 'All Tags' list and follow the steps described <<CopyTagsFeatures,below>>.

===== Copying Tags Between Features

When <<HootConflictReview,reviewing>> conflicts or editing features it is often useful to be able to copy tags from a selected feature and either append or overwrite the tags of another feature that can be within the same layer or in a different layer.  For example, when conflating two layers a selected set of features are flagged for the user to review and determine whether any further action is required. This is explained using the following POI scenario involving OSM and MGCP place name features in the Democratic Republic of the Congo (2°58'40.82" N 22°20'45.08" E). 

[[CopyTagsFeatures]]
1) Select a source point (orange highlighted marker) and check the boxes next to each tag in the All Tags list that you wish to copy to the other feature. 

.List of tags from source feature with selected tags checked.  Data sources are OSM (pink) and MGCP (orange) POI data in the Democratic Republic of the Congo (2°58'40.82" N 22°20'45.08" E). DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_copysourcetags.png[scaledwidth="50%"]

2) Select a target point (pink highlighted marker) and expand the All Tags list to display the existing tags. Note that the name in this selected OSM POI is "Badjoki" whereas in the MGCP feature it is "Bodjoki".   

.List of tags in selected target POI (orange highlighted marker). Data sources are OSM (pink) and MGCP (orange) POI data in the Democratic Republic of the Congo (2°58'40.82" N 22°20'45.08" E). DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_selecttargetPOI.png[scaledwidth="50%"]

3) To append the copied tags, select the OSM POI (pink highlighted marker) and hit `Ctrl + Alt + v`.  Note that this action will produce a semicolon delimited list for any existing value e.g. name, source along with any new tags added from the source POI e.g. `landuse = built_up_area`; `place:importance=fifth`; `place=village`, etc.  To commit changes click the Save button or to undo click the undo button.

.Copying tags using append (`Ctrl + Alt + v`).  Data sources are OSM (pink) and MGCP (orange) POI data in the Democratic Republic of the Congo (2°58'40.82" N 22°20'45.08" E). DigitalGlobe GlobalBasemap (GBM). Red boxes appear over the modified tags.
image::user/images/id/hoot_appendtags.png[scaledwidth="50%"]

4) To overwrite the copied tags in the target feature, select the OSM POI feature and `Ctrl + Shift + v`.  Note that this action will overwrite any existing tag values. 
 
.Copying tags using overwrite (`Ctrl + Shift + v`). Data sources are OSM (pink) and MGCP (orange) POI data in the Democratic Republic of the Congo (2°58'40.82" N 22°20'45.08" E). DigitalGlobe GlobalBasemap (GBM). Red boxes appear over the modified tags.
image::user/images/id/hoot_overwritetags.png[scaledwidth="50%"]

=== Hootenanny Map Tools

The Hootenanny map portion of the interface mirrors the Open Street Map iD editor link:$$https://www.openstreetmap.org/edit?editor=id$$[OpenStreetMap-iD] with additional customization to support conflation workflows. Map navigation options appear in the upper right portion of the map viewer noted by B in figure <<HootiD-UILayout>>. To view a maptip and/or <<Hoot-iD_Shortcuts,shortcut>>, hover the cursor over each button and information concerning the functionality of a particular feature will appear.

==== Map Navigation

Clicking on either '+' or '-' buttons will zoom the user one level higher/lower in the map. Alternatively users can use the middle scroll wheel of their mouse to zoom up or down levels. To open the map to your current location, click on the arrow button noting that some browser security settings do not allow users to share their location information.

==== Background Settings

Clicking on the Background Settings button (shortcut key = b) opens up a panel displaying different background layer display options. To set the brightness for the background layer, click on the palette next to Background for 100%, 75%, 50%, or 25% brightness. Users can select from a range of publicly available basemaps such as Bing aerial imagery, MapQuest Open Aerial, Mapbox Satellite, OpenStreetMap, or create a custom basemap URL using the following URL template shown below. Any user uploaded <<Hoot-iD_Basemap,Basemap>> images will appear in this panel. For those users with access to DigitalGlobe link:$$https://evwhs.digitalglobe.com/myDigitalGlobe/[EV Web Hosting Service] (EVWHS), the GBM/EGD imagery service can be selected using different imagery profiles e.g. Most Recent, Most Aesthetic Color, Least Cloud Cover.  To get register for an account please visit: https://evwhs.digitalglobe.com/myDigitalGlobeAdmin/RegistrationRequest.html

.DigitalGlobe GBM/EGD display options.
image::user/images/id/hoot_GBM.png[scaledwidth="25%"]

Below is a URL template for creating your own basemap URL service. Click on the _Custom_ option and enter a basemap url with the coordinates and zoom level similar to the example shown below. The x and y coords represent the center point and the zoom represents the zoom level. Creating a custom basemap tiled service using a georeferenced geotif/tif is described in <<Hoot-iD_Basemap,Manage Basemap>>.

------
http://(hosted_imagery_service_name)/OSM/{zoom}/{x}/{y}.png
------

[[Hoot-iD_Background]]
.Background Settings in Hootenanny with the Custom Basemap URL options displayed.
image::user/images/id/hoot_background.png[scaledwidth="75%"]

NOTE: The DigitalGlobe GBM/EGD basemap is not enabled by default due to user access restrictions. If an account has been set up with a valid UUID, you will need to edit the _dgservices.js_ file located in $TOMCAT6_HOME/webapps/hootenanny-id/js/id/services/ adding in your UUID account credentials for the egd/gbm_connectId = 'enteruuidhere' parameters.  You will also need to set dg.enabled = true.

==== Image Carousel

The image carousel displays all of the available images by timestamp and sensor that are in the DigitalGlobe GBM/EGD service if the service has been enabled. Users can select a particular DigitalGlobe image from the listed sensors/dates displayed in the carousel by clicking on the Image Carousel button (highlighted in blue below) or typing the 'c' shortcut key.

.DigitalGlobe GBM Image Carousel displayed with Washington, D.C. Street Centerline roads on DigitalGlobe GlobalBasemap (GBM) imagery.
image::user/images/id/hoot_image_carousel.png[]

NOTE: The image carousel thumbnails do not appear, only the image acquisition date and sensor type (e.g. WV02, WV01, WV03_VNIR, etc...).

==== Map Data

The Map data settings (shortcut key = F) allow users to add map overlay information such as a photo overlay from link:$$http://www.mapillary.com/map$$[Mapillary] or a local GPX file, modify the display settings for vector data, and filter existing Map Features. _Mapillary_ is a crowd source platform that allows users to upload street level photos (not commonly used for conflation but part of the core OSM iD interface) when available. Users can also drag and drop a local GPX (GPS generated dataset) or use the file browser to add.

Fill Areas allows users to select from three different options for displaying relevant vector data. The first option is _No Fill_ or Wireframe (shortcut key = W) which makes it easier to display background imagery. _Partial Fill_ displays fill areas around their inner edges only. _Full Fill_ displays features with complete fill turned. Users can adjust the _Line Width_ by unchecking the _use default value_ and setting the width value accordingly. To filter out different features of interest, simply check or uncheck the boxes next to each associated map feature found in _Map Features_ such as Points, Major Roads, Buildings, etc.  

[[Hoot-iD_MapData]]
.Map Data options shown with DcGisRoads displayed on DigitalGlobe GBM. The default line width is used in this figure.
image::user/images/id/hoot_mapdata.png[scaledwidth="75%"]

==== Tools

The Tools button provides users with a quick set of customized tools for measuring length/area and cropping layers to smaller subsets using either the visual extent or user defined bounding box. To access both options click on the Tools button and select either Measurement or Clip Tools.

[[Hoot_Tools]]
.Tools button shown in Hoot UI.
image::user/images/id/hoot_tools.png[scaledwidth="75%"]

[[Hoot_measure]]
===== Measurement Tools

There are two measurement tools currently provided; Measure linear distance or length of an object and measure the area of an object. To measure the length of an object on the map, click on the Tools button and select Measurement Tools | Measure Length.  The cursor will then change into crosshairs indicating that you are able to measure a feature by drawing a line.  To continue a drawing, left click to add nodes as needed.  To complete the measurement double-click. To measure an area/perimeter of a feature, select the Measure Area option and click on the screen to add nodes and double click to complete the measurement.  The measurement values will appear with the perimeter value listed above the area.

.Measuring area in Hootenanny.
image::user/images/id/hoot_measure_area.png[scaledwidth="75%"]

NOTE: The pan/zoom functions are disabled when measuring an object due to the way that measurements are captured on the screen. Clicking on the map after completing the measurement will cause the value to disappear from the screen. It is also possible to display the measurement of a selected layer geometry by clicking the `i` key.

===== Clip Tools

The clip tools provide a simple mechanism for cropping map layers using either the current visual extent of the map or a user defined bounding box.  An example use case might be if the user ingests a country level dataset into Hootenanny but is only interested in conflating a region or city within that data. Rather than conflate the entire country dataset, the user would clip the area using the Clip Tools to reduce it to a specific AOI and then run the conflation against that clipped dataset.  Two options are provided; clip to visual extent and clip to bounding box.  When clip to visual extent is selected the current visible map is used as the clip AOI.  If the preference is to define a bounding box on the map, the user can select clip to bounding box and then single left-click on any location dragging the displayed box to the desired size and direction. Keep in mind the first point clicked on the map is either the top or bottom corner depending on where the box is positioned.

Once a bounding box (or visual extent) has been selected, a dialog box will pop up with options to specify an output name and path of the clipped dataset.  After the job has successfully completed it will appear in the list of available datasets.

[[Hoot_Clip_Map]]
.Clipping a layer using a defined bounding box.  This image shows the user selecting the bounding box option, creating a rectangular clip area and submitting the job to the server. The imagery basemap displayed is the DigitalGlobe GBM service.
image::user/images/id/hoot_clip.png[scaledwidth="75%"]

==== Help

To access the help for Hootenanny, click on the bookmark icon below the Background Settings button or type the 'h' shortcut key. Each section provides relevant background on different functionality found within the Hootenanny UI. Users can navigate between sections by clicking on the section title e.g. Adding Layers and scrolling through the contents.

.Accessing the Hootenanny Help Menu.
image::user/images/id/hoot_helpmenu.png[scaledwidth="25%"]

[[Hoot-iD_Shortcuts]]
=== Hootenanny Shortcuts

The following table provides all of the available shortcut keys for accessing Hootenanny functionality.

|======
| *Shortcut* | *Action*
| 1 | Create new Point feature
| 2 | Create new Line feature
| 3 | Create new Area feature
| 6 | Measure Length
| 7 | Measure Area
| 8 | Clip to Bounding Box
| 9 | Clip to Visual Extent
| Ctrl + z | Undo
| Ctrl + y | Redo
| Ctrl + s | Save
| Ctrl + c | Copies feature geometry and tags
| Ctrl + v | Pastes selected feature geometry/tags
| Ctrl + Shift + v | Pastes selected tags using the overwrite option
| Ctrl + Alt + v | Pastes selected tags using the append option
| Ctrl + Backspace | Deletes object permanently
| Shift + Left mouse click | selects multiple features geometry/tags within layer
| Alt + b | Switches b/w layers during post-conflation conflict review
| Alt + n | Toggles layer visibility on/off
| + | Zoom in 1 level
| - | Zoom out 1 level
| / | Toggles display of overview map and map-in-map results during Conflict Review
| a | Continue drawing a line at the selected node
| b | Display background layer switcher
| c | Open Image carousel
| d | Disconnect lines/areas from selected node
| f | Displays Map datasettings
| h | Display in-editor help/documentation
| i | Display feature info such as length and centroid coords
| m | Move selected feature / Merge during POI Review
| n | Advances to next review during Conflict Review
| o | Make feature a circle (must be poly or closed loop line)
| p | Steps back to previous review during Conflict Review
| r | rotate object around center / Resolved during Conflict Review
| s | Straighten a line or square corner of area
| x | Split line into two at selected node
| ↓,↑,←,→ | pan map in direction
| v | Make line go in opposite direction
| w | Toggles Wireframe vector display on/off
| Enter/Esc | stops drawing feature
| F11 | sets browser to full screen
|======


===  Conflation Workflows

When conflating data in Hootenanny, users must have both a Reference Dataset and a Secondary Dataset loaded in the map. Once the layers have been selected, the _Conflate_ button will appear with various options that can be selected by the user.  The following section(s) highlight those options as well as explore different types of conflation strategies using publicly available datasets.  When users are ready to conflate they will need to populate the following fields. 

[[HootiD-conflationoptions]]
.Conflation options displayed in lower left panel. In this example, a reference conflation between OSM roads (pink) and MGCP roads (orange) in Port Au Prince, Haiti is displayed on DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_conflation_new.png[]

*_Save As_*:  The name you would like to save the merged layer as. By default, a file name Merged_* is populated in this field but this can be overwritten manually by entering a specific layer name.  If no value is provided a default name will be provided.

*_Path_*:  The existing folder path where you want to save the conflated output. To create a new folder to save the output enter that in the _New Folder Name_ field.

*_New Folder Name_* (optional): The name of any new folder you want to save the output to.  Note that it will be created at the folder level specified in the Path.  Leave blank if no new folder is required.

*_Type_*:  This is the type of conflation you want to run.  Note that there are four conflation options available: _Reference Conflation_, _Average Conflation_, _Cookie Cutter & Horizontal Conflation_ and _Advanced Conflation_.  

[[HootiD-AttributionRefLayer]]
*_Attribute Reference Layer_*:  By default, the Reference layer contains both the geometry and attribution that dictates the merged features. In many cases, however, reference geometry and attribution exists across multiple layers and therefore we provide the ability to utilize the Secondary layer as the reference attribution for cases where the secondary layer is determined to contain the most accurate tag information while the reference layer contains the most accurate geometry.

[[HootStats]]
*_Collect Stats?_*: True/False. Allows users to collect statistics about the performance of a conflation job such as the counts of pois, highways, buildings or the percentage of merged/reviewed features and display them underneath the layer as shown in <<Hootlayerstats>>. To enable this switch the drop-down from false to true.  To view the stats collected, click on the `i` next to the layer name and expand the Statistics as shown below.

[[Hootlayerstats]]
.Hootenanny merged layer statistics. To view click on the `i` highlighted in the red box and expand the relevant sections e.g. Parameters, Options, Statistics, Statistics (Raw). Note that the sidebar is expanded to view the full table.
image::user/images/id/Hoot_layertoggle.png[scaledwidth="25%"]
image::user/images/id/Hoot_layerinfo.png[]

=== Conflation Info and Statistics

Hootenanny provides users with the ability to generate statistics and display information pertaining to each conflation and associated input layers. Statistics are collected when users set the collect stats option to _true_ for a given conflation as described <<HootStats,here>>.  If collect stats = false, Hootenanny will display only the conflation parameters i.e. the Reference/Secondary layer names and Conflation Type, and Options, i.e. what args were included in the conflation job, for the merged layer after the conflation job has completed. When the Collect Stats option is set to true, Hootenanny will generate statistics such as the counts for all nodes, ways and relations in each of the input and output layers (similarly for counts of pois, roads, and buildings), counts of unmatched, merged, and review features as well as percentages for each.  These formatted statistics are displayed in the _Statistics_ section of the layer info shown in <<Hootlayerstats>>.  In addition to these stats, users can also view the raw statistics that Hootenanny collects when this option has been enabled.  These values appear as comma separated lists (e.g. Total Conflatable Features = 374,227,0) pertaining to the Reference Layer, Secondary Layer, and Merged Output Layer next to each statistic parameter.  

=== Types of Conflation

==== Reference Conflation

Reference conflation assumes that the Reference Dataset contains the most accurate geometry/tag info with the Secondary Dataset containing the non-authoritative features to merge.  By default, Hootenanny assumes that the Reference Dataset contains the reference tag values but users have the option to set this to the secondary dataset by selecting that layer in the Attribute Reference Layer dropdown list. 

When using Reference Conflation the output is assumed to contain the following:

1) Matched feature geometry/tags from the Secondary Dataset into the Reference Dataset.

2) Unmatched feature geometry/tags from both the Reference and Secondary Datasets.  

NOTE: If a required tag has a null or missing value, a default value will get assigned based on the output specification for that field and data type.

==== Average Conflation

Average conflation maintains the general shape of the two inputs, produces close to an exact average, and avoids large data perturbations. Using the road data example, the operator starts by averaging the first two nodes for a road, then moves along each segment or way, averaging nodes together and at the end of the feature averages the final two nodes. To determine the average value for each way, it first calculates the maximal nearest subline, assigns a weight based on the circular error (lowest error, highest weight and vice-versa), and returns the weighted average of the two geometries.

NOTE: Average conflation will modify the merged layer geometry for any matching features.  For this reason caution should be applied and the output should be verified by a qualified data steward for any inaccurate intersections generated in the process.

==== Cookie Cutter & Horizontal Conflation

Cookie Cutter & Horizontal Conflation is intended for use cases where a lower quality dataset such as a rural road network generated from a low resolution map needs to be conflated with a more accurate or precise dataset such as a urban centerline layer digitized from accurate high resolution imagery. In this scenario, the higher quality data (typically representing an urban area a city core) is buffered and cut, then stitched into the coarse resolution road layer using edge matching routines to create blend of the two layers. To walk through a sample Horizontal Conflation use case see <<HootiD-HorizontalConflationExample>>.  Additional background on Cookie Cutter and Horizontal conflation can also be found in the link:$$https://github.com/ngageoint/hootenanny/releases/download/v0.2.20/Hootenanny.-.User.Guide.pdf$$[Hootenanny User Guide]. When using this method the following settings are applied.

* The bounds of the Reference layer (cookie cut portion) are approximated using an alpha shape (e.g. cookie-cut) that is created by generating a convex hull around the layer.
* The bounds of the Reference layer are buffered by 1km on each side of the convex hull (2 km distance in total). This improves the chances of merging seams between the two layers. Note that this operation works better at the city scale then at a regional or larger scale.
* The Secondary layer (dough portion) is cut by the alpha shape generated from the Reference layer and matched to road features within the Secondary layer that fall within the buffered retion.

[[HootiD-convexhull]]
.Example of alpha shape generated with a 1km buffer around a "contrived" urban area (not an actual physical location). The blue line represents the convex hull and the red the alpha shape with the applied -1 km buffer.
image::user/images/id/hoot_convexhull_example.png[scaledwidth="40%"]

NOTE: In the user interface there is no way to tune or modify the generated alpha-shape. You can however configure the alpha-value from the command line (see alpha-shape in User Guide). In either case, the generated alpha-shape will always approximate the bounds of the data regardless of shape of the urban area.

==== Advanced Conflation 

Advanced Conflation allows users to customize a particular conflation job using a set of exposed advanced <<Advanced_Conflation_Options,options>>. These are intended for use cases where there is intimate familiarity with both the configuration parameters and the unique set of conditions that warrant their use. For example, to modify any of the Cleaning or Rubber Sheeting options when conflating rivers, users can simply expand the Cleaning Options and Waterway Options panels and modify accordingly. Note that caution should be exercised when applying these as their use may produce unexpected results.

The advanced parameters are accessed by clicking on the triangle next the Type highlighted in the red box in <<HootiD-advanced>>. Background on each Advanced Conflation option can be found in <<Advanced_Conflation_Options>>.

[[HootiD-advanced]]
.Advanced Conflation Options. To access the Advanced Conflation Options click on triangle highlighted in the red box next to the Type.
image::user/images/id/hoot_advanced_conflate.png[scaledwidth="50%"]

[[HootConflictReview]]
=== Reviewing Conflicts in Hootenanny

When conflating data it is inevitable that conflicts may arise due to the ambiguous relationships between matched features. When this occurs, reviewable items are flagged and presented to the user in the UI through an iterative review process where further user is required. This occurance of getting reviews during a conflation is often the result of any of the following circumstances:

* Invalid Input
* Conflicting matches – In the core conflict refers to two matches that cannot be applied to the same map.
* Records that somewhat match, but aren’t clearly a match or miss.

From the UI perspective, the term "Conflict" is used synonymously with "Review" but not all reviews are conflicts. Each type of data (POI, Buildings, Roads, etc.) when conflated introduce their own unique types of conflicts where the user is advised to take some action of either merging two POIs together, editing a layer geometry to eliminate any potential conflict or resolve the item as is to maintain as a separate feature.  No single solution can be provided to address a particular conflation conflict but rather it is up to the user to take the necessary steps based on the review text presented to reduce the likelihood that erroneous data will get introduced during the conflation process.

During review mode, the user is presented with a pair of features where they must take an appropriate action in order to resolve the review.  Depending on the features involved, a user can decide either to maintain these as separate features (as is) by clicking _Resolved_ (H), merge them into a single feature (POI 2 POI only) by clicking _Merge_ (E) then Resolved, or modify the feature geometry manually (see <<ModifyLayerGeometry>>).  Note with each review there is an accompaning review note (B) that provides a short detail on the reasons for reviewing the features in question but rarely does this provide enough information to take a specific action.  In depth knowledge of the datasets and coverage area by an appropriate data steward is typically required to provide the necessary guidance to take an action for a review.    

[[ReviewMode_Layout]]
.Layout of Review Mode in Hootenanny: *A*: Overview with map-in-map results; *B*: Review note and counts; *C*: Share Review; *D*: Hide/Show Table; *E*: Merge feature (POI only); *F*: Preview Review; *G*: Next Review; *H*: Resolve Review; *I*: Review table (Red is Reference, Blue is Secondary); *J*: Attribute panel showing selected Reference POI tags; *K*: Highlighted Red/Blue reviewed POIs. Latvia POI data (OSM and geonames) displayed on DigitalGlobe GBM. 
image::user/images/id/Hoot_reviewmode_layout.png[]

Clicking on any of the highlighted fields in the review table (I) selects the feature (either red/blue) in question and display its attribute in the left tag panel (item J in <<ReviewMode_Layout>>).  Users can toggle the review items table by clicking on the _Hide/Show Table_ button located in the conflict review bar at the bottom.  In order to complete the review process, all reviews must be resolved either by stepping through each individually or by clicking the _Complete Review_ button to resolve all remaining reviews.  After resolving reviews users can either export the data to the desired output format or add another layer for additional conflation.  Note that features displayed in green represent those which have been merged prior to the review and other colors represent the original input layers. 

==== Review Text

When features are flagged as needing review, a number of different review notes may appear to provide some guidance to the user.  The review notes are general and don't provide the specific reasons why a pair of features are being reviewed against one another but do provide some context for understanding why a review may have occurred.  For example, the Review Note: The feature pair with a review score of 0.375 met the review threshold of 0.25 provides the review score and the threshold value which could be compared against other features with similar score and threshold values. Often when conflating POI data, review notes such as _Somewhat similar (200m) - very similar names and generic type, very close together, generic type to place match_ or _Somewhat similar (26m) - very close together, similar POI type_ will appear.  Those provide an indication of the reasons for being flagged and the distance between the POIs in the particular review.  Any specific questions regarding the reviews and required action can be addressed to Hootenanny.Help@digitalglobe.com.

[[MapInMap]]
==== Map-in-Map

In Hootenanny, the concept of Map-in-Map is used here to describe an inset or overview map that contains additional spatial information relating to the conflation i.e where reviews occur within the AOI. When a conflation job completes and reviews are generated, users can display an overview map showing colored points representing the location (or centroid of the location) where unresolved, merged, and currently reviewed features occur for the corresponding AOI.  To view this map, press the `/` key when reviewing features and the smaller overview map should display a set of points representing the review layer.

Depending on the density of data flagged for review, the features are represented in the following manner: yellow dots corresponding to the location of unresolved reviews; a single red dot indicating the currently reviewed feature in the user's session; and green dots representing any resolved or merged features.  This visual aid becomes useful particularly when multiple users are editing the same layer simultaneously since it provides a map of the spatial distribution of reviews in real or near-real time.

.Hootenanny Review mode with Map-in-Map overview displaying unreviewed features (yellow dots), current reviewed feature (red dots), and resolved features (green dots). In this example, a user is reviewing several POI review conflicts for a conflation between OpenStreetMap POIs and Geoname POIs within Riga, Latvia (Imagery is DigitalGlobe GBM Basemap).
image::user/images/id/hoot_mapinmap_review.png[scaledwidth="75%"]

==== Multi-user Conflict Reviewing

Hootenanny supports the ability for multiple users to review the same merged output layer containing any number of generated reviews.  Using the given scenario of a reference conflation between two POI layers resulting in 15K reviews, any user with access to the same Hootenanny deployment can load the merged layer containing the unresolved reviews and take any necessary action to resolve them.  To mitigate any toe-stepping that might occur due to multiple users accessing the same review pair simultaneously, reviews are presented in a randomized order such that there is a fairly low probability of two users getting the same review at the same time (assuming that the review count is high and the number of reviewers is low).  For those instances where a review is presented to two users simultaneously, the user that resolves their review first by clicking on the Resolved button will commit the change to the database.  

[[HootShareReviews]]
==== Sharing/Saving Reviews

To assist with the multi-user conflict reviewing, there is a new mechanism to allow users to better collaborate on reviews using the _Share Review_ (*C* in <<ReviewMode_Layout>>) option.  When a user encounters a review that requires additional feedback prior to resolving, they can click the _Share Review_ button.  This will pop-up a dialog box allowing them to enter some details about the review which others can then open separately as a bookmark from the Review Bookmarks in Manage.  A second user can then open the review bookmark, add additional comments and view that review to take any additional action required.

.Share Review.  Clicking the Share Review button pops up a dialog box where a user can enter a title, description, note and email to associate with an unresolved review. 
image::user/images/id/hoot_sharereview.png[scaledwidth="25%"]

=== Conflation Examples

The following conflation examples are provided as guidance to help users better understand potential conflation and review issues that may arise keeping in mind that each scenario will vary tremendously from one to another depending on the characteristics of the source input data.

==== Reference Conflation: Washington DC GIS Roads against Census Tiger data.

The following workflow describes a simple use case conflating DC GIS Roads data against Tiger Census data derived from the source data below. In this example, the datasets DcGisRoads.osm and DcTigerRoads can be found in the `%HOOT_HOME/test-files/` directory where Hootenanny is installed (see <<Hoot-iD_Datasets,Data Ingest>>). 

* Tiger Roads Source data: ftp://ftp2.census.gov/geo/tiger/TIGER2012/ROADS/tl_2012_11001_roads.zip
* DC GIS Roads Source data: http://dcatlas.dcgis.dc.gov/catalog/download.asp?downloadID=88&downloadTYPE=ESRI

Once the DcGisRoads and DcTigerRoads datasets have been ingested and loaded into the map as the Reference and Secondary Dataset respectively, click on the conflate button to expose the conflation options. Provide an output name, select type = Reference, leave the remaining options as default and click the _Conflate_ button.  Conflating these two layers will typically produce anywhere from 5-8 reviews.

.Hootenanny Reference conflation using DcGisRoads (blue) and DcTigerRoads (yellow) displayed on DigitalGlobe GBM.  
image::user/images/id/hoot_reference_conflation.png[] 

After the automatically merged features have completed, a number of reviewed features will be presented along with a corresponding review note and count e.g. Reviews remaining: 5 (Resolved: 0). Note that for road reviews, many of the actions required may not be entirely intuitive and for this reason its best to work with a data steward with intimate knowledge of the source data using any supplemental background provided in either the User/Algorithms guides.   

[[ReferenceConflictReview]]
.Reviewing Conflicts in Hootenanny using DcGisRoads and DcTigerRoads. DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_reviewconflict_dc.png[]

When reviewing each conflict, users can either accept the conflict 'as is' by clicking on the _Resolved_ button (shortcut = r) or modify the feature under review accordingly using the options described in previous sections covering editing feature geometry/tags.  To display the Reference (red) or Secondary (blue) review feature tags, click on either the red or blue review fields and note the tags displayed on the left panel. Note that if any geometry or tag information is subsequently modified during the review process, users will be need to click the save button to commit those changes to the database (clicking resolve will not commit any feature or tag editing modifications).  If no geometry/tag information is modified, clicking the resolve button is sufficient.   Once all reviews have been resolved, a message will pop-up in the upper right corner stating that there are no more available features to review and a Complete Review button will appear under the merged layer name. Clicking on that will allow users to either export the data using the provided layer export options or Add Another Dataset to continue with the conflation process.  

.Completing the Review Process in Hootenanny. Users can choose to <<HootiD_Exporting, Export>> the data or Add another dataset to conflate.  The layer colors displayed on the map correspond to the Reference (blue for DcGisRoads) and Secondary (yellow for DcTigerRoads) layers and green for any merged features.
image::user/images/id/hoot_save_output.png[]

[[HootiD-HorizontalConflationExample]]
==== Cookie Cutter and Horizontal Conflation: Conflating Boulder, CO City Streets against OpenStreetMap data.

The example describes a cookie cutter and horizontal conflation using a Street centerline data obtained from the link:$$https://www-static.bouldercolorado.gov/docs/opendata/Streets.zip$$[City of Boulder] and a Highway dataset obtained from OSM. The figure below shows the two layers displayed on top OpenStreetMap data. The dark gray lines represents the higher quality street centerline data and red lines represent the OSM highway layers for Boulder and the surrounding area.

[[horizontalconflate_Boulder1]]
.Boulder OSM map with with roads data overlayed. Boulder, CO; Boulder city street centerline (gray), OSM highways (red); OSM Basemap.
image::user/images/id/hoot_horizontal.png[scaledwidth="50%"]

Zooming in with relevant imagery displayed in the background, we can see that _Streets_ layer is better aligned with the background imagery and provides better coverage in the city by including more streets and alleys whereas the OSM data provides wider coverage for the surrounding area but is less detailed.

.Verifying data on imagery. Boulder, CO; Boulder city street centerline (gray), OSM highways (red); DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_boulder_streetcenterline.png[scaledwidth="30%"]

When using this conflation type, the first layer (cookie-cutter) will contain the reference geometry and be used to perform the cookie-cutter operation. The second layer represents the dough from which the first layer is cut. The process is depicted below in <<Cookie-Cutter_conceptual_workflow>>. In the image labeled A, the input dough layer (Boulder OSM) is shown. In image B, an alpha shape is generated around the cookie-cut region defined by Layer 1, the Boulder City Road data, with a -1 km buffer applied. The process continues with the OSM dough layer "cut" using the alpha shape (image C). Finally the two layers are combined (image D).

[[Cookie-Cutter_conceptual_workflow]]
.Cookie Cutter and Horizontal conceptual workflow using Boulder, CO streets.
image::user/images/id/hoot_cc_concept.png[scaledwidth="50%"]

A further examination of the vector data after conflation shows that along the buffer area, the roads have been aligned and joined with all duplicate features removed.

.Zoomed-in view of horizontal conflation matched roads.
image::user/images/id/hoot_boulder_postconflate.png[scaledwidth="30%"]
*Location*: Boulder, CO; *Vector*: Conflated centerlines and OSM data; *Map*: OSM

Viewing the workflow within the Hootenanny UI, the Boulder Streets data is added as the Reference dataset and the OSM Boulder Highway dataset as the Secondary data source. The user selects _Cookie Cutter & Horizontal_ as the Conflation Type and picks a layer to represent the Attribute Reference Layer then clicks Conflate.

.Two Boulder, Colorado roads conflated using Cookie Cutter and Horizontal Conflation. Shown here are Boulder City Street centerlines (pink) as the Reference layer and OSM highways (blue) as the Secondary layer with DigitalGlobe GlobalBasemap (GBM). Note the use of OSM data is not an indication of the data quality but simply used here as an example of a larger dataset covering the greater Boulder metropolitan region.  
image::user/images/id/hoot_boulder_preconflate.png[]

The final conflated layer represents the merger of the Boulder streets layer and the OSM highways data with all duplicates removed and cookie-cut roads joined. Once the conflation process has completed, the resulting dataset can be exported as a shapefile, FGDB, or WFS from the UI following the steps outlined <<Hoot-iD_Datasets,here>>.

.Boulder cookie-cutter and horizontal conflation output (green) displayed on DigitalGlobe GlobalBasemap (GBM).
image::user/images/id/hoot_boulder_merged.png[]

[[Poi2PoiConflation]]
==== POI to POI conflation: Washington, D.C.

Points of Interest (POI) to POI conflation is supported within Hootenanny by default when any two layers containing POIs are added to the map. POIs are compared against one another and scored based on a variety of tag/conditions (see Algorithms/User Guide for more background on Unifying conflation scoring).

Unlike linear and polygon features, the review process for POIs provides the capability to _merge_ attribution and geometry when reviewing conflicts. Merge combines the two POIs attribution into a single POI with the reference geometry and a combination of non-reference/reference attribution. When determining an appropriate action, a user must first consider whether the points represent two separate POIs, a single POI, or an invalid POI in which case the user might move or delete the POI(s) in question.  In this example, a link:$$https://www.arcgis.com/home/item.html?id=f323f677b3f34fe08956b8fcce3ace44$$[DC POI] dataset containing locations and attributes of _Address Alias_ points composed of a variety of link:$$http://geospatial.dcgis.dc.gov/dc_kmz/metadata/AddressAliasPt.html$$[features] as part of the Master Address Repository (MAR) for the D.C. Office of the Chief Technology Officer (OCTO) and participating D.C. government agencies is conflated against link:$$http://www.mapcruzin.com/free-united-states-shapefiles/free-district-of-columbia-arcgis-maps-shapefiles.htm$$[MapCruzin] POI data derived from OSM. Conflating these two POI datasets produces 62 reviews with a range of conflict review notes to step through and take appropriate actions of either merging or accepting as two separate POIs.

[[POI2POIConflictReview]]
.Reviewing Washington, D.C. POI conflicts in Hootenanny using the DC POI and MapCruzin data. In this case the user is determining whether the feature highlighted in blue, "Reed Elementary School", should be merged with the feature highlighted in red, "MARIE REED ELEMENTARY SCHOOL".  A red arrow appears when hovering over the merge button indicating the proposed merge direction but this can be reversed by hitting the `Ctrl` key and merge button simultaneously.
image::user/images/id/hoot_poi_conflate.png[]

NOTE: A POI merge can occur in either direction depending on the users preference.  In most cases clicking merge will merge the secondary dataset POI into the reference POI combining relevant attributes but this can be reversed by holding down the Ctrl key when clicking the merge button.  This will not work when using the merge `m` short-cut key.

[[HootiD_GenericRiverConflation]]
==== Advanced Conflation Example: Generic River Conflation

One of the experimental options available for advanced conflation is the ability to conflate Waterways data using methods described in the link:$$https://github.com/ngageoint/hootenanny/releases/download/v0.2.17/Hootenanny.-.Developer.Guide.pdf$$[Developer Guide] in the Generic River Conflation section.  If users would like to explore this capability by conflating two rivers datasets, make sure that the Waterways options have been enabled in the Advanced Conflation Options panel as shown in the figure below.  Note that no exact set of parameters may produce the desired results so experimentation maybe required.  Background on each options is provided in greater detail in the Developer Guide and listed in <<WaterwayOptions>>.

.Waterway conflation options available from the Advanced Conflation Options panel.
image::user/images/id/hoot_waterway.png[scaledwidth="25%"]

[[HootiD_Exporting]]
==== Export Conflated Data

After both conflation and reviews have been completed, users can export the conflated dataset using a selected translation schema and output file format. Click on the _Export Data_ button shown below to display the export configuration page.

.Exporting Conflated Results button.
image::user/images/id/hoot_export_results.png[scaledwidth="25%"]

[[hootexport]]
.Export Options from Hootenanny.
image::user/images/id/hoot_export_options.png[scaledwidth="25%"]

===== Export Translation Schema

Users can select which translation schema (MGCP, LTDS 4.0, LTDS 6.1) they would like to export their data. This list will likely expand as new schemas are added to the deployed build after subsequent software releases.

===== Export Format

There are currently four options for exporting data from Hootenanny: File Geodatabase (FGDB), Shapefile, OSM and Web Feature Service (WFS). Note that FGDB, Shapefile, and OSM formats are exported as a zip file containing all of the relevant associated files, while WFS is exported as WFS Get Capabilities service URL that can be added into an OGC-enabled third party application (see <<HootiD_WFSExport,WFS Export>>).  There is an additional option when exporting TDS data as a FGDB to append to existing FGDB template if users would like to utilize the MILSPEC symbology available from the ESRI ArcGIS Defense Mapping extension for ArcGIS 10.2. More information regarding this capability can be obtained by emailing Hootenanny.Help@digitalglobe.com.

===== Export File Output Name

This is the output name of the exported file.

[[Hoot-iD_Manage]]
=== Manage Hootenanny

The _Manage_ capabilities within Hootenanny provide a set of administrative tools and data management options for users. For example, a user can use the _Translation Assistant_ to create a custom translation between two different tag schemas for generating agency standard products used for foundation GEOINT content. Data can also be imported/exported from the _Datasets_ settings to different file formats supported by desktop GIS applications and translated to a specific data schema to evaluate compliance to standard specifications using tools like the Geospatial Analysis Integrity Toolkit (GAIT).

This section presents an overview of the functionality in each setting and provides a set of example workflows to showcase how the tool can be implemented using real world datasets.

Click on the _Manage_ link in the top right-hand side of the user interface.

.Manage Settings in Hootenanny.  A. Vertically displayed settings allow users to select different menu options for each setting.  B. The primary window for updating or interacting with elements associated with each setting. C. The toggle to return to map/manage view.
image::user/images/id/hoot_ui_manage.png[scaledwidth="75%"]

[[TranslationAssistant]]
==== Translation Assistant

The Translation Assistant was developed to facilitate the translation of "shoebox" (one-off or custom) datasets into Hootenanny’s internal format of OSM xml. Users must map attribute names and values from the source dataset to a common schema so that conflation operations can occur. The available target schemas in the current release include OSM and TDSv61. The choice of target schema is dependent on the users fluency with said schema and how conversant they will be in defining an accurate mapping, as well as technical factors noted below. All translations end up in the internal OSM schema when stored in the database and used during conflation operations.

NOTE:  Validation for some schemas, such as TDS, is more strict (does not support ad hoc tag key=values) and it only supports one FCODE type per layer. Other schemas may produce lossy results in certain directions, such as translating from OSM to TDS during export. For example, OSM will be a lossless translation target format, but if in the end, the conflated datasets will be exported to TDS, then defining the translation mapping in TDS should guarantee that mapped fields remain lossless.

The Translation Assistant provides users with a UI driven tool to merge and translate datasets with varying schemas into common data models using standard tag schemas (OSM, TDS, etc.). The output generated from the Translation Assistant is a custom translation script that will be used to prepare data for the conflation feature matching process.

To access the Translation Assistant, click on the Manage button and then the Translation Assistant settings page to open, as shown in the figure below.

.Translation Assistant
image::user/images/id/hoot_TA_open.png[scaledwidth="60%"]

To begin the process, users select the tag schema they want to use to define the translation mapping in. The translation schema can be changed at any time, but unexpected results may occur if more than one tag schema is used to define a single translation script.

Users must upload the dataset files for which they want to define a translation. If the _Upload file(s)_ dialog is open, files chosen can be one or more shapefiles, consisting of .shp, .shx, and .dbf components at a minimum; or a zip file containing one or more shapefiles, or a folder that is a file geodatabase. If the _Upload folder_ dialog is opened, the chosen folder can contain one or more shapefiles or be a file geodatabase.

NOTE:  If the uploaded dataset contains more than one Feature Class a drop-down will be added to the UI and translation mappings can be defined per Feature Class.  At minimum, an FCODE e.g. AL015 or feature type e.g. highway = road is required for each feature class in order to save the translation file.

The translation mappings are defined at the attribute level and support one-to-one, one-to-many and many-to-one attribute-tag associations. To better illustrate the utility of this tool, a walk through example is provided using the Washington, D.C. Street Centerline data downloaded from DCGIS Open Data's data catalog (http://opendata.dc.gov/). For this example we will be using a downloaded link:$$http://opendata.dc.gov/datasets/f3b0c6a6ff5f4493b85d858e67b7400b_43.zip$$[shapefile] from the site and mapping it to the OSM Tag Schema.

*_One to One Mappings_*

In its simplest form, a translation mapping takes a field name and maps it to a tag key. Field values become tag values with no transformation. In this example the source dataset attribute, _ST_NAME_, is mapped to the OSM tag, `name` by typing/autofill name in the field. The same process can be repeated for the attribute, _REGISTERED_, mapped to the OSM tag, `alt_name`.

.One to One Tag Key Mapping. _ST_NAME_ in the source data is mapped to the OSM tag, `name`.
image::user/images/id/hoot_TA_one-to-one.png[scaledwidth="25%"]

The next form involves mapping specific attribute field values to specific tag values, in addition to translating the field name to a tag key. For this example (and many others), the process of mapping attributes may involve some additional research into the proper definitions for road classifications. In some cases, attributes from source data may not have direct 1:1 relationship to OSM tags so `best match` approaches are often taken at the discretion of the analyst performing the translation. Using the link::$$http://www.fhwa.dot.gov/planning/processes/statewide/related/highway_functional_classifications/fcauab.pdf$$[Highway Functional Classification] from the Department of Transportation, we can attempt to map the values to their link::$$http://wiki.openstreetmap.org/wiki/Highways$$[OSM tag] equivalents.

.One to One Tag Key:Value Mapping. _FUNCTIONAL_ is mapped to the OSM tag, highway, with each value set appropriately.
image::user/images/id/hoot_TA_one-to-one_key-value.png[scaledwidth="25%"]

*_One to Many Mappings_*

One to many mappings are supported by clicking on the plus button after each new tag association has been added for a given attribute. The figure below shows a one to many mapping for the +ROUNDABOUT+ field and maps to the OSM tags +junction=roundabout+ and implies +oneway=true+. Note that this field is not present in the DC Street Centerline data and is simply used here as an example.

.One to Many Mapping Example.
image::user/images/id/hoot_TA_one-to-many.png[scaledwidth="25%"]

*_Many to One Mappings_*

Many to one mappings are supported with the Translation Assistant UI based on the OSM semi-colon value separator. The purpose of this is to allow the user to retain any fields in their shoebox dataset that would otherwise be dropped due to the lack of a corresponding tag in the target schema. The special tag key used for this feature is +extra_attributes+. All attributes mapped to this tag will be concatenated together. An example tag is `extra_attributes=speed_mph=45;city=District of Columbia;country=US`.

NOTE:  Support for this extra_attributes tag does not exist in some export schemas such as TDS. If an export schema does support the concept of a catch-all field such as _notes_ or other, Hootenanny can add support for it in the export translation capability.

*_TDS Schema_*

A key distinction when doing translations with OSM tag schemas versus the Topographic Data Store (TDS) schema is that the TDS defines feature types based on +FCODE+ values. To support this within the Translation Assistant, the user must select the appropriate FCODE type using a drop-down menu of possible supported TDS feature types and proceed with the schema mapping. This FCODE restricts the set of available tags and is assumed to apply to every feature in the layer.

NOTE:  The TDS translation option only supports one feature type per translation layer.

==== Notional Custom Translation Example: Washington, D.C. Street Centerlines

To start a custom translation in the Translation Assistant select the appropriate tag schema, which in this case is OSM. Then click on the _Upload file(s)_ button select the `Street_Centerlines_-_Light.shp`, `Street_Centerlines_-_Light.shx`, and `Street_Centerlines_-_Light.dbf` files. Once loaded, the Translation Assistant displays that this particular file contains 36 attributes and the user has the option of mapping all or a select number of them to their corresponding OSM tag. For each attribute in the file, the user has the following options:

* Create an attribute mapping. Users add a new tag relationship by clicking on the plus sign and typing the name of the corresponding tag to add in the field.
* Save the mapping. Users click Next to save a mapping and advance to the next attribute.
* Ignore the attribute. Users click the Ignore button to ignore that attribute in the translation.
* Skip the attribute. Users click on the backward or forward arrows next to each attribute name (e.g. < 2 of 36 > ), to skip past that attribute.

NOTE: You must select either Ignore or Next to save a mapping for an attribute. Using the arrow icons to skip the attribute will cause any unsaved mappings for that attribute to be lost.

The first attribute presented in this translation is _DESCRIPTION_ which is a local functional street classification system. The closest OSM tag for this `ref:road:type` which supports values such as `avenue`, `boulevard`, `circle`, etc. Proceeding the next attribute, _DIRECTIONALITY_, this maps to the OSM key `oneway` whose values are `oneway=yes/no`. In this case you can simply set any value with One Way to `yes` and Two way to `no`. The vast majority of the attributes are unique the DCGIS Open Data format and can therefore be ignored by clicking the Ignore button. An X will now appear in the box next to each ignored field indicating that it will be ignored in the translation file. Moving through the attributes, another field of interest is _FUNCTIONAL_, a feature class code that denotes highway functional class of the road based on link::$$http://www.fhwa.dot.gov/planning/processes/statewide/related/highway_functional_classifications/fcauab.pdf$$[NHS standards]. For this example, the user should type the OSM tag `highway` and then expand the value options to set each _FUNCTIONAL_ value to the appropriate highway tag by clicking on the taxonomy icon next to the field. For each unique value you'll need to create the appropriate mapping so for instance in this case, _Collector_ could map to `tertiary`, _Interstate_ to `primary`, _Local_ to `unclassified` _Minor Arterial_ to `secondary`, _Other Freeway and Expressway_ to `motorway` and _Principal Arterial_ to `primary`. Click 'Next' to save the mapping.

Attributes such as _OWNERSHIP_, _STNAME_, _SHAPE_LENGTH_, and _REGISTERED_ represent fields where you would want the attribute value to correspond directly to the tag value, e.g. `NAME=Main St. -> Geographic Name Information : Full Name=Main. St.`. These fields can be mapped to the OSM tags, `ownership`, `name`, `length` and `alt_name`, respectively.

NOTE:  After entering name, the user can either press Tab or Enter to select the first option or click the desired option from the list. To register a tag key not found in the lookup press Tab or Enter. To register a tag key that is a substring of a lookup key, use the Backspace button to remove the auto-completed portion of the string and press Tab or Enter. To dismiss an incomplete tag key press Escape. To remove a defined tag mapping click the X icon.

Once all attributes have been either mapped or ignored, a _Save Translation_ button will appear at the bottom indicating that the translation is populated with enough values to be functional (when mapping to TDS tag schema at minimum users must have at least one feature type mapped to an F_CODE before they are prompted to save the translation). Users can review the expanded list of tag mappings by clicking on each attribute name under the attribute number bar. A check will appear for all mapped attributes and a X for all ignored.

.The translation mapping can be saved once all attributes have been defined. 'X' boxes indicate ignored attributes while checked boxes are mapped.
image::user/images/id/hoot_TA_save_trans.png[scaledwidth="25%"]

When the user is satisfied that their translation is sufficiently populated with enough defined tag mappings, they can click on the Save Translation button and a pop-up message will appear asking whether you would like to add it to the list of available internal translations.  Clicking OK will open the _New Translation_ dialog box with the generated translation file in Javascript.  Provide a name and description then Save Edits to save the translation.  This translation file will now be available to use for importing new data as discussed in <<Hoot-iD_Datasets>>.

.Adding the translation to list of internal Hootenanny translations.
image::user/images/id/hoot_addtranslation.png[scaledwidth="25%"]

[[HootiD-Translation]]
==== Translations

The Translation settings page contains all of the predefined translations (MGCP, OSM, TDSv40, TDSv61) in addition to any custom translations that have been generated from the translation assistant. To add a new translation, click on the _Add New Translation_ button. Populate the Name and Description fields in this form and copy/paste your _Translation Assistant_ generated Javascript.  Note that the translation assistant adds the translation file to the list of available translations as part of the custom translation workflow so users are not required to use the add new translation option and manually paste in their generated translation file.  The pre-defined translations are displayed as read-only and cannot be edited by users however any custom translation will be editable by clicking on the folder icon and editing any Javascript as needed.

.Managing Translations. Clicking on the Translation page opens the list of available translation files that can be used for importing new data.  To modify a given translation file (only applicable for read/write capable custom translation files), click on the folder icon and edit the javascript as needed.  To delete click on the trash can icon.
image::user/images/id/hoot_translation_tab.png[scaledwidth="75%"]

[[Hoot-iD_Datasets]]
==== Datasets

The Datasets settings page provides users with options for managing data that they wish to use in Hootenanny including importing from source (shapefile, osm, geonames, FGDB), organizing data into a folder structure, renaming/deleting/moving data that has been already ingested, and exporting data from Hootenanny into pre-defined output formats and translation schemas.  To access this feature click on the Datasets setting button.

.Datasets settings. Users can add new datasets, add a new folder and manage existing datasets.
image::user/images/id/hoot_dataset_tab.png[scaledwidth="75%"]

===== Adding Datasets

When users click on Add Data, a dialog box including different options for importing datasets appears. For _Import Type_, users can select either .zip file containing a single or multiple shapefiles (multiple shapefiles will get merged into a single layer during import), a shapefile, a .osm file, a geonames text file from geonames.org (renamed to x.geonames) or a ESRI FileGeoDatabase (FGDB) directory.

[[AddNewData]]
.Importing data into Hootenanny.
image::user/images/id/hoot_add_dataset.png[scaledwidth="75%"]

*_Bulk Import_*

To ingest multiple datasets in bulk mode, Hootenanny provides a bulk importer where additional data can be added as rows to a form that handles the ingest data job.  To access this feature, right-click on the Add Datasets button as shown below and select the Bulk Import option.  A _Bulk Importer_ menu will appear with each row representing a unique dataset to import along with any relevant import options.  Click import when finished to submit the job.

[[HootBulkImport]]
.Bulk Import in Hootenanny.  To access right-click on the Add Dataset button and populate each field.  Note that larger datasets will require more time to import.
image::user/images/id/hoot_bulkimport.png[scaledwidth="75%"]

===== Adding Folders

To add a new folder, click on the Add Folder button and enter the name of the folder they wish to create.  Any sub folders can be created by right-clicking on the folder and selecting Add Folder or selecting a new output folder name in the add dataset menu.  When deleting a folder, all data contained in the folder will be removed with the exception of any subfolders, which will then become the next directory within the newly deleted folder.  For example, if your folder structure consists of a parent named TEST containing dataset1 and subfolders TEST2 (containing dataset2) and TEST3 (containing dataset3). Deleting the TEST folder will remove only dataset1 and bring the folders, TEST2 and TEST3 to the root level.  The data within those folders will remain intact.

.Add folder.  Click the Add folder button to open the relevant menu options.
image::user/images/id/hoot_add_folder.png[scaledwidth="25%"]

===== Export Data

To export a dataset, right-mouse click on a dataset and select the Export Dataset option to open the Export dialog box shown in <<hootexport>>.  The various export options are discussed in detail in <<HootiD_Exporting>>.

[[right-click_export]]
.Export from dataset.
image::user/images/id/hoot_export_rtclick.png[scaledwidth="75%"]

NOTE: Datasets must be selected (highlighted in yellow) to export. When selecting more than one dataset only delete and move are available options.

===== Other Data Manage Options

Layers can be managed by right-clicking on selected datasets to expose different menu options.  Note that the options presented will depend on the number of files are selected.

.Manage data options available from Right-click.
image::user/images/id/hoot_manageoptions.png[scaledwidth="15%"]

To delete, move or rename an existing dataset(s), right click over the highlighted layers and select the appropriate option.

*_Prepare for Validation_*

The Prepare for Validation option provides users with the capability of generating a 30% sample of validated POI features that can be used to determine the degree to which it can be identified using the basemap imagery data source. When using DigitalGlobe GBM/EGD data, the imagery metadata is appended to each POI indicating what image id was used to validate a given feature.  To prepare a POI layer for validation, right-click and select Prepare for Validation.  A dialog box will appear prompting users to enter a name for the layer.

.Create new validation layer.  Enter an output name and click run to generate the validation layer.
image::user/images/id/hoot_prepareforvalidation.png[scaledwidth="25%"]

Once complete, users can load this newly generated validation layer and Hootenanny will popup a prompt to go into Validation mode whereby three validation options are presented.  Each presented option (either 1, 2, or 3) when selected will populate different hoot:review:choices tags as well as any imagery source metadata if used.

.Confirmed: You can look at the point in the imagery and determine what it is (e.g. a mosque, airport, stadium, etc.) Shortcut key = 1.

.Assessed: You can determine that the point is a building from the imagery but you cannot verify its type (e.g. hair salon, coffee shop, etc..). Shortcut key = 2.

.Reported: You cannot determine the point using the provided imagery (missing coverage, clouds, etc.). Shortcut key = 3.

.Validating a layer of Washington, D.C. Points of Interest in Hootenanny against the DigitalGlobe GBM/EGD basemap.
image::user/images/id/hoot_validate_layer.png[scaledwidth="75%"]

NOTE: Panning the map during Validation causes the highlighted POI to become unselected and removes the validation options. To resume validation, click the Select button at the bottom.

*_Filter Non-HGIS POIs_*

The Filter Non-HGIS POI capabilities is provided for users working with the Human Geography Information Service (HGIS) version 2.0.  It provides a simple means to take any layer and filter anything that is not a HGIS POI (e.g. road and/or building) based on the HGIS v2.0 definitions for POI.  Note that this capability is very specific to the HGIS group at DigitalGlobe/NGA and should only be used in conjunction with those efforts.  Please contact hootenanny.help@digitalglobe.com for any questions regarding this.  To create a new filtered layer simply right-click and select the option, then provide an output layer name.

[[HootiD_WFSExport]]
==== WFS Exports

The WFS Export tab lists all of the available WFS Services that have been generated from previous conflation jobs. Click on the up arrow icon to display the WFS Resource URL. Copy/Paste the URL into a third party application that supports WFS. Note that the URL provided is the full GetCapabilities document describing the service.

.WFS Exports tab. A list of all user generated WFS services will appear here.
image::user/images/id/hoot_wfs.png[]

Example Hootenanny generated WFS URL:

------
URL:  http://localhost:8080/hoot-services/ogc/ex_f7e41fccf46343b6987d003c5a83c9a3?service=WFS&version=1.1.0&request=GetCapabilities
------

[[Hoot-iD_Basemap]]
==== Manage Basemaps

Hootenanny provides users with the capability to generate their own custom basemap service using a georeferenced image. Currently Hootenanny only supports GeoTIFF or png file types. To generate a new basemap that can be displayed in Hootenanny, click on the Basemap tab and the _New Basemap_ button. Use the file browser to upload your local georeferenced image (GeoTIFF or png only).

.Creating New Basemaps for Hootenanny.  Click on the + New Basemap and select an appropriate georeferenced image.
image::user/images/id/hoot_basemap.png[]

When the file has finished processing, you will see a crossed through eye indicating that the basemap is available but disabled. To enable, simply click on the eye icon and select it from the available background imagery layers. Note that larger imagery files will take additional time to process on the server.

.Managing Basemaps
image::user/images/id/hoot_basemap2.png[]

Select the uploaded Basemap listed in the Background Settings button as shown below. Note you will be prompted to zoom to the bounding box of the background image when selecting.

.Viewing Basemap in Hootenanny. Rome, Italy; 2012 WorldView-2 DigitalGlobe image displayed in Natural Color.
image::user/images/id/hoot_view_basemap.png[]

===== Hoot Log

The Log tab provides both the Application and UI log for users to troubleshoot any issues that may occur during a user session.  There are two panels that are provided here; The Error log which provides core and service logging detail (i.e. tomcat catalina.out) and the UI log which provides errors generated from the iD web client.  The full log can be exported by clicking on the export full log button.  Note that any UI issues will also appear on the map map in the upper right corner in red highlight when they are triggered.  This messages are maintained in the UI log until the browser session is reloaded.

.Hootenanny Error and UI Log File.
image::user/images/id/hoot_log_tab.png[]

Any additional questions can be emailed to hootenanny.help@digitalglobe.com.

NOTE: Those familiar with Chrome's developer console (hitting F-12 key will open it in a separate tab or browser window) can use that for additional debugging capability. This tool is used frequently by our developers for debugging client side code and greatly enhance the ability to diagnose issues.

[[HootStatsReport]]
===== Reports

The Reports tab contains all of the generated reports for conflation jobs where Generate Report = True has been specified. To download a report, click on the arrow and save the file to your local desktop.

.Hootenanny Conflation Statistic Reports
image::user/images/id/hoot_csr_tab.png[]


===== Review Bookmarks

The Review Bookmarks tab shown in <<ViewingReviewBookmark>> stores all of the shared reviews described in <<HootShareReviews>>.  Users can open any review and read any pertinent notes or comments, then if necessary add any relevant additional comments.  These notes will persist with the review bookmark for the duration of its lifecycle or until the user clicks the trashcan icon to delete them.  

Note that when adding comments to an existing review they will appear from an anonymous user unless you click on the user icon in the upper right corner to _Set User For Session_.  

[[ViewingReviewBookmark]]
.Hootenanny Review Bookmarks.
image::user/images/id/hoot_reviewbookmarks.png[]

Clicking on the magnifying glass next to the refresh icon for each review will open a pop-up message asking if you would like to navigate to the review item on the map.  Note that when the review is resolved, this feature is no longer available and the review bookmark will appear with the status, Resolved. 

[[EditingReviewBookmark]]
.Opening a review in the Review Bookmarks tab.  Comments and notes can be added by clicking on the `+` symbol in the right corner.  To open the map to this review click on the magnifier glass in the top right corner and a pop-up message will provide feedback for returning to review mode in the map.
image::user/images/id/hoot_openreview.png["75%"]

=== About Hootenanny

This tab provides all of the version information for Hootenanny Core, Web Services and iD Editor versions and provides a link to download the Hootenanny User Interface Guide.  

.Hootenanny Version info
image::user/images/id/hoot_about.png[]

[[Advanced_Conflation_Options]]
== Appendix: Hootenanny Advanced Parameters

The following advanced configuration parameters are provided to the user via the Advanced Conflation option.

[[Advanced_Cleaning_Options]]
=== Cleaning Options

* *Enabled*: allows map cleaning operators to be applied during conflation.
* *Remove Duplicate Way*: Remove duplicate ways (lines) that are exact duplicates. If the lines partially overlap with exactly the same geometry then only the partial overlap is removed from the more complex geometry.
* *Duplicate Name Remover Case Sensitive*: Removes duplicate names when their case also matches otherwise ignore case when removing.
* *Remove Superfluous Way*: Remove all ways that contain no nodes or all the nodes are exactly the same.
* *Remove Unlikely Intersections*: Remove implied intersections that are likely incorrect. For example, a motorway overpass intersecting a residential street at a 90° is considered unlikely and "unsnapped". The geometry location is not modified.
* *DualWay Splitter*: Split highway types that are marked as divided into two separate geometries marked as oneway roads. A number of assumptions must be made to do this including assumptions about the direction of travel on roads (right or left hand drivers).
* *Implied Divided Marker*: If two roads implicitly should be marked as divided based on the surrounding roads, mark it as such. This is primarily caused by the FACC+ spec which does not allow bridges to be marked as divided.
* *Small Way Merger*: Merge any ludicrously small ways that have essentially the same attributes. Things like `UUID` are ignored. See `small.way.merger.threshold` for setting the threshold value.
* *Small Way Merger Threshold*: If highways are smaller than threshold and the tags matched then they will be merged together into a single way.
* *Remove Empty Areas*: Remove all area elements that have a area of zero.
* *Remove Duplicate Areas*: Remove any area elements that are essentially the same.
* *Remove No Information Element*: Remove any elements that don't have any tags with information. (E.g. only contains UUID and source, but not FCODE equivalent or other informative tags).

[[RubberSheetingOptions]]
=== Rubber Sheeting Options

* *Enabled*: Enables Rubber Sheeting options.
* *Rubber Sheet Ref*: Provides a rubber sheet transform for moving input 2 towards input 1. If not enabled, both inputs are moved towards each other.
* *Rubber Sheet Minimum Ties*: Sets the minimum number of tie points that will be used when calculating a rubber sheeting solution.

[[GeneralConflationOptions]]
=== General Conflation Options

* *Unify Optimizer Time Limit*: The maximum amount of time in seconds to wait for the optimizer to complete. A value of -1 makes the time limit unlimited. If this value is set to something other than -1 your conflation results may change between multiple runs. Especially if the machine Hoot is running on is under heavy load. If the "CM Score:" value is changing between runs and GLPK isn't finding an optimal solution then this is likely causing different output. Just because the output is changing doesn't mean it is wrong, but this can be problematic if you're doing testing or expecting repeatable output for other
* *OGR Split O2S*: If the list of o2s tags is > 255 char, split it into into 254 char long pieces. If this is false, it will be exported as one big string.
* *OGR TDS Add FCSubtype*: Add the ESRI specific FCSUBTYPE field to the output.
* *OGR TDS Structure*: Exports TDS data in Thematic Groups (TransportationGroundCrv, StructurePnt etc) instead of one FCODE per file/layer (ROAD_L, BUILDING_P etc).

[[RoadOptions]]
=== Road Options

* *Engines*

** *Unify*: Unify incorporates more recent conflation algorithms that process the routines into a single process flow and flag reviewable items to the user. This is the default conflation engine.
** *Disabled*: Disables the road conflation engine altogether.
** *Greedy*: Uses 'Greedy' optimization to determine a good set of matches based on conflation routine designs from 2012 (See Hootenanny - Algorithms Guide for more background). This approach only deals with roads and does not flag questionable situations as reviews. Conceptual it uses the following steps

.Find the best unconflated road match between two maps
.Merge the matched roads and mark the result as conflated
.Repeat

(if `Unify` enabled):

* *Search Radius Highway*: The search radius to use when conflating highways. If two features are within the search radius then they will be considered for conflation. If the value is -1 then the circular error will be used to calculate an appropriate search radius.
* *Highway Matcher Heading Delta*: The distance around a point on a way to look when calculating the heading. A larger value will smooth out the heading values on a line. A smaller value will make the heading values correspond directly to the heading on the way at that point. This is primarily used in subline matching. Values are in meters.
* *Highway Matcher Max Angle*: Sets that maximum angle that is still considered a highway match. Units in degrees.
* *Way Merger Min Split Size*: The minimum size that a way should be split into for merging. Units in meters.

[[BuildingOptions]]
=== Building Options

* *Enabled*: Enables building conflation options.
* *Search Radius Building*: The search radius to use when conflating buildings. Currently not implemented.

[[POIOptions]]
=== POI Options

* *Enabled*: Enables POI conflation options.
* *POI Options*: POI conflation engine to be used.

** *Places*: Conflates POIs using the  PLACES algorithms which looks for name similarity and geographic proximity. Predates the Unify conflation engine which incorporates additional business logic and review similar to unify road conflation. See Hootenanny - Algorithms Guide for more detail.
** *Unify*: Conflates POIs with Unify algorithm routines into a single process flow and flag reviewable items to the user. See Hootenanny - Algorithms Guide for more detail.
** *Disabled*: Disables the POI conflation options.

[[WaterwayOptions]]
=== Waterway Options
The Waterway options have been pre-populated with default values based on generic river matching work discussed in the Hootenanny - Developer Guide. These can be modified if the user has deeper familiarity with the parameters. Waterway options are disabled by default.

* *Enabled*: Enables waterway conflation options below.
* *Waterway Angle Sample Distance*: Distance used for sampling during angle histogram extraction with the SampledAngleHistogramExtractor. Values are in meters.
* *Waterway Matcher Heading Delta*: The distance around a point on a way to look when calculating the heading. A larger value will smooth out the heading values on
a line. A smaller value will make the heading values correspond directly to the heading on the way at that point. This is primarily
used in subline matching. Values are in meters.
* *Waterway Auto Calc Search Radius*: Auto calculates the search radius using the circular error.
* *Search Radius Waterway*: Search radius value to override the auto calculated radius. Waterway Auto Calc Search Radius must be unchecked to enter value.
* *Waterway Rubber Sheet Minimum Ties*: Minimum tie points to use for rubber sheeting.
* *Waterway Rubber Sheet Ref*: Provides a rubber sheet transform for moving input 2 towards input 1. If not enabled, both inputs are moved towards each other.
