
[[SupportedDataFormats]]
== Supported Data Formats

**Hootenanny supports the following formats as input:**

* File Geodatabase (.gdb)
* GeoJSON (.geojson file or Overpass query URL) (M1)
* geonames.org (.geonames)
* Hootenanny API Database (hootapidb://)
* OpenStreetMap API Database (osmapidb://)
* OpenStreetMap API Web Service (http://)
* OpenStreetMap Protocol Buffers (.osm.pbf)
* OpenStreetMap XML (.osm)
* Overpass JSON (.json file or Overpass query URL) (M1)
* Shapefile (.shp)
* Zip files containing shapefiles and/or ESRI File Geodatabase files (.zip)
* Additional OGR supported formats not listed here

**Hootenanny supports the following formats as output:**

* File Geodatabase (.gdb)
* GeoJSON (.geojson) (M1)
* Hootenanny API Database (hootapidb://)
* OpenStreetMap API Database (osmapidb://)
* OpenStreetMap API Web Service (http://; via changeset only)
* OpenStreetMap Protocol Buffers file (.osm.pbf)
* OpenStreetMap SQL changeset file (.osc.sql)
* OpenStreetMap XML file (.osm) (M2)
* OpenStreetMap XML changeset file (.osc)
* Overpass JSON file (.json) (M1)
* Shapefile (.shp) (M1)
* Additional OGR supported formats not listed here

**Notes:**

* (M1) = format requires reading entire dataset into memory during processing
* (M2) = format requires reading entire dataset into memory during processing only if element ID output needs to remain sorted
* All data read with a specified bounding box filter requires reading the entire dataset into memory during processing.

All Hootenanny commands can be passed any supported input/output format unless otherwise stated in the command's documentation. See the Hootenanny User Guide for details.

Additional data types can be be made importable/exportable using Hootenanny's pluggable I/O architecture.  See the Hootenanny Developer Guide for details.

The Hootenanny API database format (hootapidb://) is a slightly optimized version of the OSM API database with a different schema than the 
database used with public OSM (osmapidb://) for use with conflation. The primary difference between the two is that the Hootenanny API database
allows for multiple feature layers with each one corresponding to a map stored in its own table. The public OSM API database supports a single
feature layer for the entire world.
The format is meant for internal use by Hootenanny only.
