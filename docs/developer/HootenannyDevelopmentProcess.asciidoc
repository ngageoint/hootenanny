
=== Development Process

* Open a https://github.com/ngageoint/hootenanny/issues[GitHub issue] for the work to be done and 
assign it to yourself. Place the issue in an appropriate Hootenanny epic when possible.
* Perform the work on a https://github.com/ngageoint/hootenanny/branches[new GitHub branch] 
derived from the master branch and named as the number of the corresponding GitHub issue.
* Ensure your changes follow the https://github.com/ngageoint/hootenanny/blob/master/docs/developer/HootenannyCodeBestPractices.asciidoc[coding best practices].
* Ensure your changes match the https://github.com/ngageoint/hootenanny/blob/master/docs/developer/HootenannyCodeStyle.asciidoc[approved code style].
* Ensure your changes are https://github.com/ngageoint/hootenanny/blob/master/docs/developer/HootenannyTests.asciidoc[adequately tested]. While we have no official test coverage requirement and 100% test coverage is not 
required, you should be able to get between 90%-95% coverage for most code. A test coverage report 
may be generated from the command line or as part of the pull request job.
* Ensure your changes are https://github.com/ngageoint/hootenanny/blob/master/docs/developer/HootenannyCodeDocumentation.asciidoc[properly documented] with code comments. 
https://github.com/ngageoint/hootenanny/blob/master/docs/developer/HootenannyAPI.asciidoc[API documentation] 
may be generated from the command line or as part of the pull request job.
* Ensure your changes are adequately documented in the User Guide.
* If you are making significant changes to the conflation algorithms, you may want to run the 
regression tests at this point. They will run automatically nightly against the master branch.
* Create a https://github.com/ngageoint/hootenanny/pulls[pull request] to merge the work branch into 
the master branch and assign it to yourself. Link the pull request to the original issue and add any 
additional required detail to the pull request description. Tests will automatically run as part of 
the pull request and their outcome may be viewed on Jenkins.
* Correct pull request job test failures if necessary.
* After all tests are passing, check the quality of your changes using 
https://sonarcloud.io/dashboard?id=hoot[Sonar] and improve them as necessary.
* Assign at least one individual to review your pull request.
* Once the pull request has been approved by the reviewer(s), all tests are passing, and all 
https://sonarcloud.io/dashboard?id=hoot[Sonar] issues have been dealt with, merge the pull request.
If you don't already have it, you will need to obtain permission to merge the pull request from the
Hootenanny development team. If that is not possible, then someone from the team can merge it for 
you.
* Check the status of the nightly regression tests the following day and fix failing regression 
tests if necessary.

