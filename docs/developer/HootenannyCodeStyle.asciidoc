
=== Code Style

==== C++

The file `conf/core/QtCreatorStyle.xml` should take care of settings up most of the styling for you. 
Here are the highlights:

* Use appropriately descriptive class and variable names.
* Class names use Pascal Case: `MyClass`.
* Method names use Camel Case: `myMethod`.
* Private method names are prepended with an underscore: `_myPrivateMethod`.
* Non-const private variable names use Camel Case and an underscore: `_myVar`.
* Const variable names use all capitals and an underscore: `MY_CONSTANT`.
* Indents are two spaces.
* Braces are put on lines separate from code.
* There are no spaces between parameters: `dontDoThis( var )` and `doThis(var)`.
* There is a limit of 100 spaces per line (this is negotiable). This supports individuals who 
rotate their screens vertically.
* Similar class methods/variables should be grouped together in the header file with 
constructors/destructors being toward the top.
* Place private member variables before member methods in the function file.
* Per class member access type, list member variables before member methods.
* Place getters/setters at the end of the public documentation in the header file.
* All class files should include the standard Hootenanny header with copyright information and the 
correct copyright date. 
* Group header includes by type with the type name as a comment above each group. e.g. hoot includes together with "// hoot" above them, Qt includes together with "// Qt" above them, etc.
* Header includes should be alphabetized.
* "hoot" header includes should be placed before other header includes.
* Not specifically code related, but all asciidoc files used in the documentation must have at least
one blank line at the beginning and end of the document in order for the PDF documentation to 
generate correctly.

