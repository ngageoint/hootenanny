{
    "id": "attribute_conflation_options",
    "elem_type": "group",
    "description": "Attribute conflation options.",
    "name": "Attribute Conflation Options",
    "required":"true",
    "members": [
      {
        "id": "attribute_override_hoot_road_opt_engine",
        "elem_type": "list",
        "description": "A list of road engines",
        "name": "Engines",
        "defaultvalue": "Unify",
        "hoot_key": "hoot.road.opt.engine"
      },
      {
        "id": "attribute_aggressive_highway_joining",
        "elem_type": "bool",
        "description": "If true, allows Attribute Conflation to more aggressively rejoin ways with names and specific highway attribution into those with less specific highway attribution and no names.  Enabling this option may result in some false positive road joining.",
        "name": "Aggressively Join Unmerged Roads",
        "defaultvalue": "false",
        "hoot_key": "attribute.conflation.aggressive.highway.joining"
      },
      {
        "id": "attribute_allow_ref_geometry_bridge_changes",
        "elem_type": "bool",
        "description": "If true, allows Attribute Conflation to modify the geometry of a reference road layer to accomodate bridge features.  If false, any bridge features represented in the secondary dataset, but not in the reference dataset will be lost.",
        "name": "Allow Reference Geometry Changes For Bridges",
        "defaultvalue": "true",
        "hoot_key": "attribute.conflation.allow.ref.geometry.changes.for.bridges"
      },
      {
        "id": "attribute_allow_reviews_by_score",
        "elem_type": "bool",
        "description": "If true, all reviews outside of the score range established by the configuration options review.score.criterion.max/min.threshold will be removed.",
        "name": "Allow Reviews By Score",
        "defaultvalue": "false",
        "hoot_key": "attribute.conflation.allow.reviews.by.score"
      },
      {
        "id": "building_force_contained_match",
        "elem_type": "bool",
        "description": "If true, a building pair has been flagged for review, and one member of the pair is contained completely inside the other, the pair will be matched instead.",
        "name": "Always atch When One Building Is Completely Contained Inside Another",
        "defaultvalue": "true",
        "hoot_key": "building.force.contained.match"
      },
      {
        "id": "building_keep_more_complex_geometry_when_auto_merging",
        "elem_type": "bool",
        "description": "Keep building ref geom",
        "name": "Keep building ref geom",
        "defaultvalue": "false",
        "hoot_key": "building.keep.more.complex.geometry.when.auto.merging"
      },
      {
        "id": "building_merge_many_to_many_matches",
        "elem_type": "bool",
        "description": "If false, many to many building matches will result in a review. If true, they will all be merged together when matched.",
        "name": "Automatically Merge Many To Many Matches",
        "defaultvalue": "true",
        "hoot_key": "building.merge.many.to.many.matches"
      },
      {
        "id":"attribute_override_conflate_post_ops",
        "elem_type":"string",
        "description":"Remove review relations and unmatched features in secondary dataset.",
        "name":"Conflate Post Ops",
        "hoot_key":"conflate.post.ops",
        "defaultvalue":"hoot::RemoveElementsVisitor;hoot::RemoveUnknown2Visitor"
      },
      {
        "id": "corner_splitter_rounded_split",
        "elem_type": "bool",
        "description": "Rounded corners in one dataset can cause non-rounded corners in the secondary dataset to not conflate",
        "name": "Corner Splitter Rounded Split",
        "defaultvalue": "true",
        "hoot_key": "highway.corner.splitter.rounded.split"
      },
      {
        "id": "duplicate_name_preserve_original_name",
        "elem_type": "bool",
        "description": "If true, the Duplicate Name Remover will always preserve the original name tag.  Otherwise, it will treat name and alternate name tags equally.",
        "name": "Preserve Original Name During Duplicate Name Removal",
        "defaultvalue": "true",
        "hoot_key": "duplicate.name.preserve.original.name"
      },
      {
        "id": "poi_polygon_allow_cross_conflation_merging",
        "elem_type": "bool",
        "description": "If false, when a match found by Building Conflation involves the same feature in a match found by POI to Polygon Conflation, a review will be generated. If true, then that situation will result in a merge between all features involved in the Building and POI to Polygon conflation matches.",
        "name": "Allow Merges When Conflicts Between Building and POI to Polygon Conflation Occur",
        "defaultvalue": "true",
        "hoot_key": "poi.polygon.allow.cross.conflation.merging"
      },
      {
        "id": "poi_polygon_auto_merge_many_poi_to_one_poly_matches",
        "elem_type": "bool",
        "description": "If false, when a match found by Building Conflation involves the same feature in a match found by POI to Polygon Conflation, a review will be generated. If true, then that situation will result in a merge between all features involved in the Building and POI to Polygon conflation matches.",
        "name": "Automatically Merge Many to One POI to Polygon Conflation Matches",
        "defaultvalue": "true",
        "hoot_key": "poi.polygon.auto.merge.many.poi.to.one.poly.matches"
      },
      {
        "id":"review_score_max_threshold",
        "elem_type":"double",
        "description":"The score threshold above which reviews will not pass the filter.  A value of 1.0 signifies no maximum score threshold.  This currently works with Attribute Conflation only and can be enabled with attribute.conflation.allow.reviews.by.score.",
        "name":"Review Score Maximum Threshold",
        "defaultvalue":"0.99",
        "minvalue":"0.0",
        "maxvalue":"1.0",
        "hoot_key":"review.score.criterion.max.threshold"
      },
      {
        "id":"review_score_min_threshold",
        "elem_type":"double",
        "description":"The score threshold above which reviews will not pass the filter.  A value of 1.0 signifies no maximum score threshold.  This currently works with Attribute Conflation only and can be enabled with attribute.conflation.allow.reviews.by.score.",
        "name":"Review Score Minimum Threshold",
        "defaultvalue":"0.35",
        "minvalue":"0.0",
        "maxvalue":"1.0",
        "hoot_key":"review.score.criterion.min.threshold"
      }
    ]
}
