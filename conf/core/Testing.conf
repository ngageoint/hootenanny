{
  "#" : "AddressScoreExtractor uses a static cache and some tests are set up to work with it being enabled, including case tests and some ",
  "#" : "unit tests. So, leave it off by default for tests and enable it where needed in command tests only.",
  "address.scorer.enable.caching": "false",
  "#" : "Address matching has a slow init time incurred on a per test process basis. So, we only want to take that hit for those",
  "#" : "tests where it is absolutely required. For unit tests, pass these option vals into the class being tested. For case tests, enable ",  
  "#" : "them selectively in child confs. Since regression tests all use this conf, you'll want to explicitly override these settings in all",
  "#" : "applicable tests so that we have an acccurate picture of address matching's impact on conflation scores. Given the longer runtimes ",
  "#" : "of the regression tests, the performance hit isn't that big of a deal.",
  "building.address.match.enabled": "false",
  "#" : "There is a specific test for building part multi-threaded merging, so lets leave it single threaded for all other tests.",
  "building.part.merger.thread.count": "1",
  "#" : "Truncating tag values with ApiTagTruncateVisitor is a default conflation op and valuable in order to keep JOSM output looking good.", 
  "#" : "However, We want to disable it during conflation tests so that we can more easily trace feature provenance via UUID. Arguably, we",
  "#" : "could alternatively come up with a generic syntax in JSON options to do this kind of disabling for any option...",
  "conflate.tag.disable.value.truncation": "true",
  "#" : "There is a specific test for multi-threaded graph comparison, so lets leave it single threaded for all other tests.",
  "graph.comparator.max.threads": "1",
  "#" : "Makes Qt hashes behave uniformly",
  "hash.seed.zero": "true",
  "jni.initial.memory": "64m",
  "jni.max.memory": "256m",
  "#" : "Use this larger search distance value in testing only, for now, in order to avoid changing a bunch of test output. This value was ",
  "#" : "experimentally determined but it value can make larger datasets intractable.",
  "poi.polygon.additional.search.distance": "125.0",
  "#" : "See note for building.address.match.enabled above.",
  "poi.polygon.address.match.enabled": "false",
  "#" : "By user request in the UI we have hardcoded POI/Polygon tag merging to use the PreserveTypesTagMerger, as there is currently",
  "#" : "no way to dynamically change tag merging from within the UI. Since PreserveTypesTagMerger is still experimental, we want to leave",
  "#" : "the merger in the these tests at its original value and possibly change it at a later time.",
  "poi.polygon.tag.merger": "hoot::OverwriteTag2Merger",
  "#" : "end"
}
