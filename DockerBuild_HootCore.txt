Build a Very Limited Hootenanny core-only Docker image for GBDX

TODO:
* Merge the build and install into the Dockerfile

Steps:
* cd to the hoot directory


* Build a Centos7 image with all of the stuff we need:
docker build --rm -t rawhoot ./docker/hootcore/


* Run the image and mount this directory in it:
docker run --rm -v $(pwd):/root/hoot -it rawhoot


* Inside the container:
cd ~/hoot

# Build Hootenanny
./docker/hootcore/HootCore_01_Build.sh

# Install Hootenanny in /var/lib/hootenanny
./docker/hootcore/HootCore_02_Install.sh

* Check that Hoot was installed and the tests run cleanly.
# NOTE: There is a failure with one of the print tests. I can't figure out
# what the difference in the test output is but Hoot complains.
cd /var/lib/hootenanny
HootTest --slow --diff


# Cleanup the image and remove packages that we don't need
# NOTE: This also removes the Hoot test-files and test-output
./docker/hootcore/HootCore_03_Cleanup.sh



* Then ctrl-p ctrl-q to get out

* Get the container ID
docker ps


* Commit the changes to a new image
docker commit -m "Hoot for GBDX" <container ID>  <Docker Username>/hootcore:<version>


* You can now go back into the container and stop it
docker attach <container ID>
CTRL-D


NOTE: Create a version and then a "latest" image
# docker tag SOURCE_IMAGE[:TAG] TARGET_IMAGE[:TAG]

docker tag <Docker Username>/hootcore:<version> <Docker Username>/hootcore:latest


* Push the image upto the Docker repo
docker push <Docker Username>/hootcore:latest
docker push <Docker Username>/hootcore:<version>


VERY IMPORTANT NOTE: When the Docker image changes, YOU MUST UPDATE THE GBDX TASK VERSION
If you don't, GBDX WILL NOT load the new docker image.


* Em Tasol


##### Testing the image #####

* The python processing script expects to see this directory structure:
/mnt/work/
	input/geojson
	output


* Create a "test" directory that can be mounted onto the image:
mkdir -p test/input/geojson
mkdir -p test/output


* Copy whatever data you are testing with into the input/geojson directory.


* Mount the directory onto the image:
docker run --rm -v $(pwd)/test:/mnt/work -it <Docker Username>/hootcore:latest


* Inside the container, run the processing script:
python /hoot-gbdx.py

NOTE: You can also run Hoot directly if needed.


