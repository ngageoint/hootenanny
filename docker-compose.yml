version: "3.7"
x-args: &default-args
  hoot_uid: "${HOOT_UID}"
  hoot_gid: "${HOOT_GID}"
  hoot_user: "${HOOT_USER}"
  hoot_group: "${HOOT_GROUP}"
  hoot_home: "${HOOT_HOME}"
  postgresql_version: "${POSTGRESQL_VERSION}"
  glpk_version: "${GLPK_VERSION}"
  liboauthcpp_version: "${LIBOAUTHCPP_VERSION}"
  libphonenumber_version: "${LIBPHONENUMBER_VERSION}"
  libpostal_version: "${LIBPOSTAL_VERSION}"
  node_version: "${NODE_VERSION}"
  npm_version: "${NPM_VERSION}"
  v8_version: "${V8_VERSION}"
  stxxl_version: "${STXXL_VERSION}"
  armadillo_version: "${ARMADILLO_VERSION}"
  gdal_version: "${GDAL_VERSION}"
  geos_version: "${GEOS_VERSION}"
  libgeotiff_version: "${LIBGEOTIFF_VERSION}"
  proj_version: "${PROJ_VERSION}"
  devtoolset_version: "${DEVTOOLSET_VERSION}"
  stxxl_version: "${STXXL_VERSION}"
  jdk_version: "${JDK_VERSION}"
services:
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      args: *default-args
    hostname: frontend
    ports:
      - 8080:8080
    env_file:
      - hoot.env
    volumes:
      - ./hoot-ui-2x:${HOOT_HOME}/hoot-ui-2x:rw
      - ./.git/modules/hoot-ui-2x:${HOOT_HOME}/.git/modules/hoot-ui-2x:rw
  postgres:
    build:
      context: .
      dockerfile: docker/Dockerfile.postgres
      args: *default-args
    hostname: postgres
    env_file:
      - hoot.env
    volumes:
      - postgres-data:/var/lib/pgsql/${POSTGRESQL_VERSION}/data:rw
  core-services:
    depends_on:
      postgres:
        condition: service_healthy
      frontend:
        condition: service_healthy
    build:
      context: .
      dockerfile: docker/Dockerfile.core-services
      args: *default-args
    hostname: core-services
    env_file:
      - hoot.env
    ports:
      - 8888:8080
      - 8094:8094
      - 8096:8096
      - 8101:8101
      - 8000:8585
    volumes:
      - ./:${HOOT_HOME}:rw
      - tomcat8-hoot-services:/var/lib/tomcat8/webapps/hoot-services:rw

volumes:
  postgres-data:
  tomcat8-hoot-services:
