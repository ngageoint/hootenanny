<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">
    <display-name>hoot-services</display-name>

    <!--contextConfigLocation has to be explicitly specified to successfully integrate Jersey and Spring -->
    <context-param>
	<param-name>contextConfigLocation</param-name>
	<param-value>
		classpath:applicationContext.xml
		classpath:security-applicationContext.xml
		/WEB-INF/spring/*.xml
    </param-value>
    </context-param>
    <context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>production</param-value>
    </context-param>

    <listener>
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>hoot.services.HootServletContext</listener-class>
    </listener>

    <filter>
        <filter-name>log4jServletFilter</filter-name>
        <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>log4jServletFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>
	<filter>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>springSessionRepositoryFilter</filter-name>
		<url-pattern>/*</url-pattern>
		<dispatcher>REQUEST</dispatcher>
		<dispatcher>ERROR</dispatcher>
	</filter-mapping>
     <filter>
         <filter-name>exceptionFilter</filter-name>
         <filter-class>hoot.services.ExceptionFilter</filter-class>
     </filter>
     <filter-mapping>
     <filter-name>exceptionFilter</filter-name>
         <url-pattern>/*</url-pattern>
     </filter-mapping>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
		<init-param>
			<param-name>contextAttribute</param-name>
			<param-value>org.springframework.web.context.WebApplicationContext.ROOT</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
    <servlet>
        <servlet-name>hoot-services</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>hoot.services.HootServicesJerseyApplication</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>hoot-services</servlet-name>
        <url-pattern>/osm/*</url-pattern>
        <url-pattern>/job/*</url-pattern>
        <url-pattern>/jobs/*</url-pattern>
        <url-pattern>/auth/*</url-pattern>
        <url-pattern>/info/*</url-pattern>
        <url-pattern>/ogr/*</url-pattern>
        <url-pattern>/ingest/*</url-pattern>
        <url-pattern>/grail/*</url-pattern>
        <url-pattern>/language/*</url-pattern>
        <!-- [!] new url-pattern's added here should be considered for security-applicationContext.xml [!] -->
    </servlet-mapping>

    <!-- EVWHS - DG's imagery service for non-commercial clients.
         As of 05/17/2017 this proxy is still needed by the GUI tier. -->
    <servlet>
        <servlet-name>evwhs</servlet-name>
        <servlet-class>org.mitre.dsmiley.httpproxy.ProxyServlet</servlet-class>
        <init-param>
            <param-name>targetUri</param-name>
            <param-value>https://evwhs.digitalglobe.com</param-value>
        </init-param>
        <init-param>
            <param-name>log</param-name>
            <param-value>true</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>evwhs</servlet-name>
        <url-pattern>/evwhs/*</url-pattern>
    </servlet-mapping>

    <!-- This allows hoot-core to auth via command line. -->
    <servlet>
      <servlet-name>out-of-band</servlet-name>
      <jsp-file>/out-of-band.html</jsp-file>
    </servlet>
    <servlet-mapping>
      <servlet-name>out-of-band</servlet-name>
      <url-pattern>/out-of-band.html</url-pattern>
    </servlet-mapping>

</web-app>
