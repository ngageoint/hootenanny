<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd"
         id="WebApp_ID" version="2.5">
    <display-name>hoot-services</display-name>

    <!--contextConfigLocation has to be explicitly specified to successfully integrate Jersey and Spring -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:applicationContext.xml</param-value>
    </context-param>
    <context-param>
        <param-name>spring.profiles.active</param-name>
        <param-value>production</param-value>
    </context-param>

    <listener>
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
    </listener>

    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <listener>
        <listener-class>hoot.services.HootServletContext</listener-class>
    </listener>

    <filter>
        <filter-name>log4jServletFilter</filter-name>
        <filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>log4jServletFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>INCLUDE</dispatcher>
        <dispatcher>ERROR</dispatcher>
        <dispatcher>ASYNC</dispatcher><!-- Servlet 3.0 w/ disabled auto-initialization only; not supported in 2.5 -->
    </filter-mapping>

    <servlet>
        <servlet-name>hoot-services</servlet-name>
        <servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
        <init-param>
            <param-name>javax.ws.rs.Application</param-name>
            <param-value>hoot.services.HootServicesJerseyApplication</param-value>
        </init-param>
        <load-on-startup>2</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>hoot-services</servlet-name>
        <url-pattern>/osm/*</url-pattern>
        <url-pattern>/job/*</url-pattern>
        <url-pattern>/info/*</url-pattern>
        <url-pattern>/ogr/*</url-pattern>
        <url-pattern>/ingest/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>ogc</servlet-name>
        <servlet-class>org.deegree.services.controller.OGCFrontController</servlet-class>
        <load-on-startup>3</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>ogc</servlet-name>
        <url-pattern>/ogc/*</url-pattern>
    </servlet-mapping>

    <servlet>
        <servlet-name>config</servlet-name>
        <servlet-class>org.deegree.services.config.servlet.ConfigServlet</servlet-class>
        <load-on-startup>3</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>config</servlet-name>
        <url-pattern>/config/*</url-pattern>
    </servlet-mapping>

    <!-- EVWHS - DG's imagery service for non-commercial clients.
         As of 05/17/2017 this proxy is still needed by the GUI tier. -->
    <servlet>
        <servlet-name>evwhs</servlet-name>
        <servlet-class>org.mitre.dsmiley.httpproxy.ProxyServlet</servlet-class>
        <init-param>
            <param-name>targetUri</param-name>
            <param-value>https://evwhs.digitalglobe.com</param-value>
        </init-param>
        <init-param>
            <param-name>log</param-name>
            <param-value>true</param-value>
        </init-param>
    </servlet>
    <servlet-mapping>
        <servlet-name>evwhs</servlet-name>
        <url-pattern>/evwhs/*</url-pattern>
    </servlet-mapping>

</web-app>
