#
#  Export Make file
#

# Options for most exports
HOOT_OPTS+= -D osm2ogr.ops=hoot::DecomposeBuildingRelationsVisitor
HOOT_OPTS+= -D hootapi.db.writer.overwrite.map=true -D hootapi.db.writer.create.user=true
HOOT_OPTS+= -D hootapi.db.writer.email=test@test.com -D hootapi.db.reader.email=test@test.com

# Add the option to append
ifeq "$(append)" "true"
HOOT_OPTS+= -D ogr.append.data=true
endif


# Options for osm & osm.pbf export
OSM_OPTS=-D hootapi.db.writer.create.user=true -D hootapi.db.reader.email=test@test.com

# Add the option to have status tags as text with "Input1" instead of "1" or "Unknown1"
ifeq "$(textstatus)" "true"
HOOT_OPTS+= -D writer.text.status=true
OSM_OPTS+=  -D writer.text.status=true
endif

#DB_URL=hootapidb://hoot:hoottest@localhost:5432/hoot
OP_PG_URL=PG:"$(PG_URL)"


OP_TRANSLATION=$(HOOT_HOME)/$(translation)
OP_OUTPUT_FILE=$(outputname).$(outputtype)
OP_OUTPUT=$(outputfolder)/$(outputname).$(outputtype)
ZIP_OUTPUT=$(outputname).zip
INPUT_PATH=$(DB_URL)/$(input)
REMOVE_REVIEW=-C RemoveReview2Pre.conf
OP_ZIP=cd "$(outputfolder)" && zip -r "$(ZIP_OUTPUT)" "$(OP_OUTPUT_FILE)"


# Hardcoded. There should be a better location for these
TEMPLATE_PATH=$(HOOT_HOME)/translations-local/template
TDS61_TEMPLATE=$(TEMPLATE_PATH)/tds61.tgz
TDS40_TEMPLATE=$(TEMPLATE_PATH)/tds40.tgz


ifeq "$(outputtype)" "shp"
	OP_ZIP=cd "$(outputfolder)/$(outputname)" && zip -r "$(outputfolder)/$(ZIP_OUTPUT)" *
endif

ifeq "$(inputtype)" "file"
	INPUT_PATH=$(input)
endif

#####



###
# Osm2Ogr
###
step1:
ifeq ("$(outputtype)","wfs")
	hoot osm2ogr $(REMOVE_REVIEW) -D ogr.writer.pre.layer.name=$(outputname)_ $(HOOT_OPTS) "$(OP_TRANSLATION)" "$(INPUT_PATH)" $(OP_PG_URL)
else ifeq ("$(outputtype)","osm")
	mkdir -p "$(outputfolder)"
	hoot convert $(OSM_OPTS) "$(INPUT_PATH)" "$(OP_OUTPUT)"
	cd "$(outputfolder)" && zip -r "$(ZIP_OUTPUT)" "$(OP_OUTPUT_FILE)"
else ifeq ("$(outputtype)","osm.pbf")
	mkdir -p "$(outputfolder)"
	hoot convert $(OSM_OPTS) "$(INPUT_PATH)" "$(OP_OUTPUT)"
else ifeq ("$(outputtype)","osm_api_db")
	mkdir -p "$(temppath)"
	hoot derive-changeset $(HOOT_OPTS) -D convert.bounding.box=$(changesetaoi) -D osm.changeset.sql.file.writer.generate.new.ids=false "$(OSM_API_DB_URL)" "$(INPUT_PATH)" $(temppath)/changeset.osc.sql "$(OSM_API_DB_URL)"
	hoot apply-changeset $(HOOT_OPTS) $(temppath)/changeset.osc.sql "$(OSM_API_DB_URL)" "$(changesetaoi)" "$(changesetsourcedatatimestamp)"
else
	mkdir -p "$(outputfolder)"
ifeq "$(append)" "true"
ifeq "$(translation)" "translations/TDSv61.js"
ifneq ("$(wildcard $(TDS61_TEMPLATE))","")
	mkdir -p $(OP_OUTPUT)
	tar -zxf $(TDS61_TEMPLATE) -C $(OP_OUTPUT)
endif # Template Path
else
ifeq "$(translation)" "translations/TDSv40.js"
ifneq ("$(wildcard $(TDS40_TEMPLATE))","")
	mkdir -p $(OP_OUTPUT)
	tar -zxf $(TDS40_TEMPLATE) -C $(OP_OUTPUT)
endif # Template Path
endif # Translations TDSv40
endif # Else
endif # Append
	hoot osm2ogr $(REMOVE_REVIEW) $(HOOT_OPTS) "$(OP_TRANSLATION)" "$(INPUT_PATH)" "$(OP_OUTPUT)"
	$(OP_ZIP)

endif # Shape/FGDB



