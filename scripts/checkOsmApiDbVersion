#!/usr/bin/perl -w

use strict;
use File::Temp qw/ tempdir /;

sub executeCmdReturnOutput($);

sub executeCmdReturnOutput($)
{
  my $cmd = shift(@_);

  return `$cmd 2>&1`;
}


if ( scalar( @ARGV ) != 1 )
{
  print( 
    "Usage: checkOsmApiDbVersion <database name>\n\n" .
    "NOTE: script will leverage PGUSER, PGPASSWORD,\n" .
    "      and PGHOST environment variables if \n" .
    "      defined to control connections that\n" .
    "      require them.\n\n");

  exit;
}

my $databaseName = $ARGV[0];

my $checkSchemaVersionCmd =
  "psql -c \"SELECT MAX(version) FROM schema_migrations WHERE version LIKE '201%';\" " .
  $databaseName;

my $retVal = executeCmdReturnOutput($checkSchemaVersionCmd);
my $dbSchemaVersion;

if ( $retVal =~ /(201\d{11})/s )
{
  #print( "\tDatabase \"$databaseName\" schema version: $1 " );
  $dbSchemaVersion = $1;
}
else
{
  print( "Could not find version in $retVal\n" );
  exit;
}


# Make temp dir
my $dir = tempdir( CLEANUP => 1 );
chdir( $dir );
#print( "\tSwitched to $dir\n" );

# Retrieve latest schema -- URL should always point to latest
my $schemaUrl =
  'https://raw.githubusercontent.com/openstreetmap/openstreetmap-website' .
  '/master/db/structure.sql';

print( "\tDownloading newest schema... " );
`wget $schemaUrl >/dev/null 2>&1`;
print( "complete!\n" );

# Pull latest version out of structure file
open( my $structureFile, '< structure.sql' ) or die( "Could not open structure file\n\n" );

my @lines = <$structureFile>;
close( $structureFile );

my $fileSchemaVersion = '19700101000000';

foreach my $currLine ( @lines )
{
  if ( $currLine =~ /INSERT INTO schema_migrations \(version\) VALUES \('(\d{14})'\)/ )
  {
    if ( $1 gt $fileSchemaVersion )
    {
      $fileSchemaVersion = $1;
    }
  }
}

#print( "\tVersion of schema: $fileSchemaVersion\n" );

if ( $dbSchemaVersion eq $fileSchemaVersion )
{
  print("\n\tOK (DB has latest schema version = $fileSchemaVersion)\n" );
}
else
{
  print( "\n\tWARNING: version mismatch " .
    "(\"$databaseName\" DB = $dbSchemaVersion, latest = $fileSchemaVersion)\n" )
}

print( "\n\n" );


