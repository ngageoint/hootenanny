#
#  Cookie Cutter Make file
#
-include $(HOOT_HOME)/HOOT_VERSION_FILE
HOOT_OPTS+= -D osm2ogr.ops=hoot::DecomposeBuildingRelationsVisitor -D add.review.tags=yes
HOOT_OPTS+= -D hootapi.db.writer.overwrite.map=true -D hootapi.db.writer.create.user=true
HOOT_OPTS+= -D hootapi.db.writer.email=test@test.com -D hootapi.db.reader.email=test@test.com
#DB_URL=postgresql://hoot:hoottest@localhost:5432/hoot
OUTPUT_DIR=$(HOOT_HOME)/test-out/$(jobid)

# Conflation
OP_INPUT1=$(HOOT_HOME)/$(INPUT1)
OP_OUTPUT=$(OUTPUT_DIR)/$(jobid).osm
OP_OUTPUT_CC=$(OUTPUT_DIR)/$(jobid)_cc.osm
DB_OUTPUT=$(DB_URL)/$(OUTPUT_NAME)


OP_CONFLATE_TYPE=--conflate
HOOT_OPTS+= $(ADV_OPTIONS)

ifeq "$(REFERENCE_LAYER)" "2"
	HOOT_OPTS+= -D tag.merger.default=hoot::OverwriteTag1Merger
endif

ifeq "$(INPUT1_TYPE)" "DB" 
	OP_INPUT1=$(DB_URL)/$(INPUT1)
endif



# Cookie Cutter
CUTTER_SHAPE=$(HOOT_HOME)/$(cuttershape)
ALPHA=$(alpha)
BUFFER=$(buffer)
TMP_ALPHA=$(OUTPUT_DIR)/$(jobid).osm
INPUT=$(OUTPUT_DIR)/$(input)
OUTPUT=$(DB_URL)/$(outputname)
OUTPUT_BUFFER=$(outputbuffer)
CROP=
OP_STAT=
OP_CMD=

ifeq "$(cuttershapetype)" "DB" 
	CUTTER_SHAPE=$(DB_URL)/$(cuttershape)
endif

ifeq ($(strip $(alpha)), )
	ALPHA=1000
endif

ifeq ($(strip $(buffer)), )
	BUFFER=1000
endif

ifeq "$(inputtype)" "DB" 
	INPUT=$(DB_URL)/$(input)
endif


ifeq ($(strip $(outputbuffer)), )
	OUTPUT_BUFFER=-500
endif

ifeq "$(crop)" "true" 
	CROP=--crop
endif

ifeq "$(GENERATE_REPORT)" "true"
	HOOT_OPTS+= -D stats.format=asciidoc -D stats.output=$(HOOT_HOME)/data/reports/$(jobid)/reportBody -D conflate.stats.types=cookieCutter
	OP_STAT= --stats
	OP_CMD=$(subst ;,!semi!,$(HOOT_OPTS))
endif

###
# Cookie Cutter
###
step1: 
ifeq "$(GENERATE_REPORT)" "true"
	mkdir -p $(HOOT_HOME)/data/reports/$(jobid)
	cp -a $(HOOT_HOME)/report/. $(HOOT_HOME)/data/reports/$(jobid)
endif
	mkdir -p "$(OUTPUT_DIR)"
	hoot --alpha-shape $(HOOT_OPTS) "$(CUTTER_SHAPE)" $(ALPHA) $(BUFFER) "$(TMP_ALPHA)" 
	hoot --cookie-cutter $(HOOT_OPTS) "$(TMP_ALPHA)" "$(INPUT)" "$(OP_OUTPUT_CC)" $(OUTPUT_BUFFER) $(CROP)
	hoot $(OP_CONFLATE_TYPE) $(HOOT_OPTS) "$(OP_INPUT1)" "$(OP_OUTPUT_CC)" "$(DB_OUTPUT)" $(OP_STAT)
ifeq "$(GENERATE_REPORT)" "true"
	cd $(HOOT_HOME)/data/reports/$(jobid) && a2x -a docinfo --dblatex-opts "-P latex.output.revhistory=0 -P latex.unicode.use=1 -s reportStyle.sty --param doc.publisher.show=0" -a HasLatexMath -a 'revdate=v`$HOOT_HOME/bin/hoot version --error | sed "s/Hootenanny \([^ ]*\) Built.*/\\1/g"`, `date "+%B %d, %Y"`' -a "input1=$(OP_INPUT1)" -a "input2=$(OP_INPUT2)" -a "output=$(DB_OUTPUT)" -a "args=" -a "cmd1=hoot --alpha-shape $(OP_CMD) $(CUTTER_SHAPE) $(ALPHA) $(BUFFER) $(TMP_ALPHA)" -a "cmd2=hoot --cookie-cutter $(OP_CMD) $(TMP_ALPHA) $(INPUT) $(OP_OUTPUT_CC) $(OUTPUT_BUFFER) $(CROP)" -a "cmd3=hoot $(OP_CONFLATE_TYPE) $(OP_CMD) $(OP_INPUT1) $(OP_OUTPUT_CC) $(DB_OUTPUT) $(OP_STAT)" -v -f pdf report.asciidoc
	echo '{"name":"$(OUTPUT_NAME)","description":"$(OUTPUT_NAME)","created":"$(TIME_STAMP)","reportpath":"$(HOOT_HOME)/data/reports/$(jobid)/report.pdf"}' > $(HOOT_HOME)/data/reports/$(jobid)/meta.data
endif
	rm -rf "$(OUTPUT_DIR)"
	

	

